


<!DOCTYPE html>
<html lang="en" class="devsite">

  

  <head>
    <meta charset="utf-8" />
    <script src="/_static/js/script_head.js"></script>
    <link rel="stylesheet" type="text/css" href="/_static/css/screen.css" />
    <link rel="shortcut icon" href="/_static/images/favicon.ico">
    <link rel="apple-touch-icon" href="/_static/images/apple-touch-icon.png">
    <link href='//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700' rel='stylesheet' type='text/css'>
    
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js"></script>
    <script id="jqueryui" src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.10/jquery-ui.min.js"></script>
    <script src="//www.google.com/jsapi?key=AIzaSyCZfHRnq7tigC-COeQRmoa9Cxr0vbrK6xw"></script>

    <script type="text/javascript" src="//www.gstatic.com/feedback/api.js"></script>
    <script type="text/javascript" src="/jsi18n/"></script>
    <!--[if lt IE 9]>
    <script src="/_static/js/html5shim/html5.js"></script>
    <![endif]-->

    
  <script type="text/javascript">
    var contentTimer = new window.jstiming.Timer();

    var ___gcfg = ___gcfg || {};
    ___gcfg.lang = 'en';
  </script>
  
  <title>Google Calendar API v2 Developer's Guide: Protocol - Google Apps Platform &mdash; Google Developers</title>
  
  
  
  
  
  
  <link rel="stylesheet" href="/google-apps/css/apps.css" />



    
    

  </head>
  <body class="two-column docs">
    
    <div id="sandbar">
      
      




<header id="gc-googlebar">

  <a id="gc-logo" href="/">
    <img src="/_static/images/developers-logo.svg" alt="Google"/>
  </a>
<script>
if (!Modernizr || !Modernizr.svg) {
  $('#gc-logo img').attr({src:'/_static/images/developers-logo.png'});
}
</script>

  <div class="gc-social">
    
    <span class='signed-out'>
      <a href="/setup?state=%2Fgoogle-apps%2Fcalendar%2Fv2%2Fdevelopers_guide_protocol" id="loginLink" class="button">Sign in</a>
    </span>
    
  </div>

  <form class="gc-search" action="/search/results" method="GET">
    <div class="searchbox">
      
      
        <span class="button button-blue mini">Google Calendar API</span>
      
      <input type="text" name="q" class="q" id="q" value="" placeholder='Search' autocomplete="off" />
    </div>
    <button class="button button-blue">
      <img src="/_static/images/search.png" alt="Search"/>
    </button>
    
      <input type="hidden" name="p" id="search_project" value="/google-apps/calendar" />
    
  </form>

</header>


<script>
  var a=!1,h=window.devsite||{};window.devsite=h;var _gaq=_gaq||[];WebFontConfig={google:{families:["Open+Sans"]}};h.location=window.location;h.reloadWindow=function(){h.location.reload()};h.openWindow=window.open;h.devsite=h.devsite||{};h.devsite.dialogConfig={autoOpen:a,modal:!0,show:"fade",dialogClass:"msgDialog",closeText:"",resizable:a,draggable:a,zIndex:9999};h.KD_FADE_LONG=218;h.KD_FADE_SHORT=130;h.progress=h.progress||{};h.progress.INTERVAL_TIME_MS=460;h.progress.MAX_LOOP=100;h.progress.RIGHT_MARGIN=6;h.progress.TOP_MARGIN=-15;
h.progress.kennedyProgressDot=function(c){var b=c.parent().find(".progress");b.remove();h.progress.circleInnerHtml='<span class="mask first"><span class="base"></span><span class="mover"></span></span><span class="mask second"><span class="base"></span><span class="mover"></span></span>';h.progress.spinnerHtml='<div class="circle initial"><span class="mask"><span class="mover"></span></span></div><div class="circle red"></div><div class="circle yellow"></div><div class="circle green"></div><div class="circle blue"></div>';b=
$("<div></div>").prop("id","loader").prop("class","yellow").html(h.progress.spinnerHtml);b.find(".red").html(h.progress.circleInnerHtml);b.find(".blue").html(h.progress.circleInnerHtml);b.find(".green").html(h.progress.circleInnerHtml);b.find(".yellow").html(h.progress.circleInnerHtml);b.css({position:"absolute",right:h.progress.RIGHT_MARGIN+"px",top:h.progress.TOP_MARGIN+"px"});c.parent().append(b);c=function(){this.colorIndex=-1;this.colors=["red","yellow","green","blue"];this.loader=b;this.loopCount=
0;this.shouldStop=a};c.prototype.start=function(){var b=this;this.loader.removeClass();this.loader.addClass("firstTime");this.interval=setInterval(function(){b.loop()},h.progress.INTERVAL_TIME_MS)};c.prototype.loop=function(){this.loopCount+=1;this.loader.hasClass("firstTime")?(this.loader.removeClass("firstTime"),this.loader.addClass("initial")):this.loader.hasClass("stopped")?(this.loader.removeClass("stopped"),this.loader.addClass("finishing")):this.loader.hasClass("finishing")?(clearInterval(this.interval),
b.remove()):(this.colorIndex=(this.colorIndex+1)%this.colors.length,this.loader.removeClass(),this.loader.addClass(this.colors[this.colorIndex]),(this.shouldStop||this.loopCount>h.progress.MAX_LOOP)&&this.loader.addClass("stopped"))};c.prototype.stop=function(){this.shouldStop=!0};var e=new c;return c={start:function(){$.fx.off||e.start()},clear:function(){b.remove()},error:function(){e.stop()}}};h.progress=h.progress||{};
h.progress.progressDot=function(c){function b(){d+=1;100>d&&f.animate({opacity:"toggle"},h.KD_FADE_LONG,b)}var e=6,f=c.parent().find(".progress");f.remove();f=$("<div></div>").addClass("progress");f.css({position:"absolute","border-radius":e+"px",border:e+"px solid #3D9400",right:e+"px",top:c.parent().height()/2-e+"px",width:0,height:0});c.parent().append(f);var d=0;return c={start:function(){$.fx.off||b()},clear:function(){f.remove()},error:function(){f.stop();f.css({opacity:1,border:e+"px solid #DD4B39"})}}};h.location=window.location;h.setTimeout=function(){return window.setTimeout.apply(window,arguments)};h.clearTimeout=function(){window.clearTimeout.apply(window,arguments)};h.localInit=function(){h.search.init()};h.search={KEY_ESC:27,fadeTime:h.KD_FADE_SHORT,keyDelay:300};
h.search.init=function(){h.search.initResultHandlers();var c=$(".gc-search");c.submit(function(){if(window.devsite.geo){var b=window.devsite.geo.lat+","+window.devsite.geo.lon,b=$('<input type="hidden" name="l"/>').val(b);c.append(b)}});var b=$("#q");b.unbind("keyup click");b.bind("keyup click",function(b){h.search.timeout&&h.clearTimeout(h.search.timeout);$(this).val()&&b.keyCode!=h.search.KEY_ESC?h.search.timeout=h.setTimeout(function(){h.search.updateResults()},h.search.keyDelay):h.search.removeAutocomplete()});
var b=$(".searchbox").children(".button"),e=$("#restrict input");(e.is(":checked")||0==e.length&&0!=b.length)&&h.search.grow();$("body").delegate("#restrict input","click",function(){$(this).is(":checked")?h.search.grow($("#restrict input").val()):h.search.shrink();h.search.updateResults();$("#q").focus()})};
h.search.initResultHandlers=function(){$(".search-results .result").unbind("click");$(".search-results .result").click(function(){var c={type:$(this).data("type"),url:$(this).data("url"),hl:$(this).data("hl"),q:$(this).data("q")};$.post("/search/go",c,function(b){b&&(h.location.href=b)});return a})};h.search.fadeOutIfExists=function(c,b,e){c&&c.length?c.fadeOut(b,e):e()};h.search.removeAutocomplete=function(){var c=$(".search-autocomplete");c.remove();h.search.lastQ=null};
h.search.grow=function(c){var b=$("#q"),e=$(".searchbox"),f=$(".gc-search").children("button"),d=e.children(".button");if(c){var d=b.val(),g=$(".results").data("query-match");g&&b.val(d.substr(g.length+1));d=$("<span></span>");d.addClass("button button-blue mini");d.text($("#restrict").find("span").text());d.data("query-match",g);e.prepend(d);g=$("<input />");g.attr({id:"search_project",type:"hidden",name:"p",value:c});$(".gc-search").append(g)}d.append($("<pre>  X</pre>"));g=$(".searchbox").width();
c=d.outerWidth(!0);var l=e.outerWidth(!0)+c;e.css("width",l+"px");b.css("width",g+"px");b=f.offset();b.left+=c+10;f.offset(b);f=function(){h.search.shrink();$("#q").focus()};d.click(f)};
h.search.shrink=function(){var c=$("#q"),b=$(".searchbox"),e=b.children("input"),f=b.children(".button"),d=f.data("query-match");d&&e.val($.trim(d)+" "+e.val());e=$(".gc-search").children("button");$("#restrict input").prop("checked",a);$("#search_project").remove();d=f.outerWidth(!0);f.remove();f=e.offset();f.left-=d+10;b.css("width","");c.css("width","100%");e.offset(f)};
h.search.updateResults=function(){var c=$(".searchbox"),b=$("#q"),e=$("#search_project"),f={q:$.trim(b.val()||"")};window.devsite.geo&&(f.l=window.devsite.geo.lat+","+window.devsite.geo.lon);e&&e.val()&&(f.p=escape(e.val()));if(!h.search.lastQ||!(h.search.lastQ.q==f.q&&h.search.lastQ.p==f.p)){h.search.lastQ=f;h.search.xhr&&h.search.xhr.abort();var d=$(".search-results");f.n=d.data("n")||4;var g=h.progress.kennedyProgressDot(b);g.start();h.search.xhr=$.get("/search/results",f,function(e){g.clear();
e&&($("#what-q").text(f.q),d=$(".search-results"),h.search.fadeOutIfExists(d,h.search.fadeTime,function(){d.empty();if($.trim(e).length){if(!d.length){d=$("<div></div>").addClass("search-results search-autocomplete").data("n",4);$("body").append(d);var g=c.offset();d.css({position:"absolute",top:g.top+c.outerHeight()+3,left:g.left})}d.append(e);var g=$("#search-next"),k=d.children(".results").data("c");g.length?k?(g.attr("href","/search/results?c="+encodeURIComponent(k)+"&q="+encodeURIComponent(f.q)),
g.show()):g.hide():$("#search-full").show();$("body").bind("click.searchAutocomplete",function(c){!$.contains(d.get(0),c.target)&&(!d.is(c.target)&&!b.is(c.target))&&d.hasClass("search-autocomplete")&&(h.search.removeAutocomplete(),$(this).unbind("click.searchAutocomplete"))});h.search.initResultHandlers();d.fadeIn(h.search.fadeTime)}}))});h.search.xhr.error(function(){g.error()})}};


  if (window.jQuery) {
    $(document).ready(function() {
      window.devsite.search.init();

      var loginLink = $('#loginLink');
      if (loginLink.length > 0) {
        loginLink.click(devsite.devsite.login);
      }
    });
  }
</script>

      
    </div>
    

    
    

    <div id="gc-wrapper" itemscope itemtype="http://schema.org/Article">
      
      <input id="gc-analytics" type="hidden" value="UA-24532603-1" />
      

      

      <div id="gc-topnav">
        <div>

          
          

          <ul>

            
            

            
            
            
            
            <li class=""><a href="/">Home</a></li>
            
            <li class="active"><a href="/products/">Products</a></li>
            
            <li class=""><a href="/events/">Conferences</a></li>
            
            <li class=""><a href="/showcase/">Showcase</a></li>
            
            <li class=""><a href="/live/">Live</a></li>
            
            <li class=""><a href="/groups/">Groups</a></li>
            

            
            
            
          </ul>
        </div>
      </div>
      
      

      
      
      
        <div id="gc-appbar">
          
          
<h1>

  <a href="/google-apps/">Google Apps Platform</a>
  <div class="plusone-container">
    <div class="g-plusone"
      data-href="https://developers.google.com/google-apps/calendar/v2/developers_guide_protocol"
      data-size="medium"
      data-source="google:developers"></div>
  </div>






</h1>


          
        </div>
      
      

      
        
      <div id="gc-main">
        
        
  
  
      
      
      <div id="gc-sidebar">
        

  



  <nav class="gc-toc"><ul><li class=""><a href="/google-apps/calendar" data-title="Google Calendar API v3"><span>Google Calendar API v3</span></a><ul><li class=""><span class="tlw-title" data-title="Get Started">Get Started</span><ul><li class=""><a href="/google-apps/calendar/get_started" data-title="Ways to Get Started"><span>Ways to Get Started</span></a></li><li class=""><a href="/google-apps/calendar/concepts" data-title="Calendar Concepts"><span>Calendar Concepts</span></a></li></ul></li><li class=""><span class="tlw-title" data-title="Your First App">Your First App</span><ul><li class=""><a href="/google-apps/calendar/firstapp" data-title="Prerequisites"><span>Prerequisites</span></a></li><li class=""><a href="/google-apps/calendar/setup" data-title="Set up a Client Library"><span>Set up a Client Library</span></a></li><li class=""><a href="/google-apps/calendar/instantiate" data-title="Configure your App"><span>Configure your App</span></a></li></ul></li><li class=""><span class="tlw-title" data-title="How-To Guides">How-To Guides</span><ul><li class=""><a href="/google-apps/calendar/recurringevents" data-title="Create Recurring Events"><span>Create Recurring Events</span></a></li><li class=""><a href="/google-apps/calendar/auth" data-title="Authorize Requests"><span>Authorize Requests</span></a></li><li class=""><a href="/google-apps/calendar/performance" data-title="Improve Performance"><span>Improve Performance</span></a></li><li class=""><a href="/google-apps/calendar/batch" data-title="Batch Support"><span>Batch Support</span></a></li><li class=""><a href="/google-apps/calendar/migration" data-title="Migrate to v3"><span>Migrate to v3</span></a></li></ul></li><li class=""><a href="/google-apps/calendar/v3/reference" data-title="Reference"><span>Reference</span></a><ul><li class=""><a href="/google-apps/calendar/v3/reference/acl" data-title="Acl"><span>Acl</span></a><ul><li class=""><a href="/google-apps/calendar/v3/reference/acl/delete" data-title="delete"><span>delete</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/acl/get" data-title="get"><span>get</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/acl/insert" data-title="insert"><span>insert</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/acl/list" data-title="list"><span>list</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/acl/update" data-title="update"><span>update</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/acl/patch" data-title="patch"><span>patch</span></a></li></ul></li><li class=""><a href="/google-apps/calendar/v3/reference/calendarList" data-title="CalendarList"><span>CalendarList</span></a><ul><li class=""><a href="/google-apps/calendar/v3/reference/calendarList/delete" data-title="delete"><span>delete</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendarList/get" data-title="get"><span>get</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendarList/insert" data-title="insert"><span>insert</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendarList/list" data-title="list"><span>list</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendarList/update" data-title="update"><span>update</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendarList/patch" data-title="patch"><span>patch</span></a></li></ul></li><li class=""><a href="/google-apps/calendar/v3/reference/calendars" data-title="Calendars"><span>Calendars</span></a><ul><li class=""><a href="/google-apps/calendar/v3/reference/calendars/clear" data-title="clear"><span>clear</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendars/delete" data-title="delete"><span>delete</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendars/get" data-title="get"><span>get</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendars/insert" data-title="insert"><span>insert</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendars/update" data-title="update"><span>update</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/calendars/patch" data-title="patch"><span>patch</span></a></li></ul></li><li class=""><a href="/google-apps/calendar/v3/reference/colors" data-title="Colors"><span>Colors</span></a><ul><li class=""><a href="/google-apps/calendar/v3/reference/colors/get" data-title="get"><span>get</span></a></li></ul></li><li class=""><a href="/google-apps/calendar/v3/reference/events" data-title="Events"><span>Events</span></a><ul><li class=""><a href="/google-apps/calendar/v3/reference/events/delete" data-title="delete"><span>delete</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/events/get" data-title="get"><span>get</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/events/import" data-title="import"><span>import</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/events/insert" data-title="insert"><span>insert</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/events/instances" data-title="instances"><span>instances</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/events/list" data-title="list"><span>list</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/events/move" data-title="move"><span>move</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/events/quickAdd" data-title="quickAdd"><span>quickAdd</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/events/update" data-title="update"><span>update</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/events/patch" data-title="patch"><span>patch</span></a></li></ul></li><li class=""><a href="/google-apps/calendar/v3/reference/freebusy" data-title="Freebusy"><span>Freebusy</span></a><ul><li class=""><a href="/google-apps/calendar/v3/reference/freebusy/query" data-title="query"><span>query</span></a></li></ul></li><li class=""><a href="/google-apps/calendar/v3/reference/settings" data-title="Settings"><span>Settings</span></a><ul><li class=""><a href="/google-apps/calendar/v3/reference/settings/get" data-title="get"><span>get</span></a></li><li class=""><a href="/google-apps/calendar/v3/reference/settings/list" data-title="list"><span>list</span></a></li></ul></li></ul></li><li class=""><a href="/google-apps/calendar/downloads" data-title="Downloads"><span>Downloads</span></a></li><li class=""><a href="/google-apps/calendar/pricing" data-title="Usage Limits"><span>Usage Limits</span></a></li><li class=""><a href="/google-apps/calendar/v3/whats-new" data-title="What&#39;s New in v3"><span>What&#39;s New in v3</span></a></li></ul></li></ul><hr/><ul><li class="deprecated"><a href="/google-apps/calendar/v2/developers_guide_protocol" data-title="Google Calendar API v2"><span>Google Calendar API v2<sup>Deprecated</sup></span></a><ul><li class=""><a href="/google-apps/calendar/v2/developers_guide_protocol" data-title="Protocol Guide"><span>Protocol Guide</span></a></li><li class=""><a href="/google-apps/calendar/v2/developers_guide_dotnet" data-title=".NET Guide"><span>.NET Guide</span></a></li><li class=""><a href="/google-apps/calendar/v2/developers_guide_java" data-title="Java Guide"><span>Java Guide</span></a></li><li class=""><a href="/google-apps/calendar/v2/developers_guide_python" data-title="Python Guide"><span>Python Guide</span></a></li><li class=""><a href="/google-apps/calendar/v2/reference" data-title="Atom Reference"><span>Atom Reference</span></a></li><li class=""><a href="/google-apps/calendar/v2/faq" data-title="FAQ"><span>FAQ</span></a></li></ul></li></ul><hr/><ul><li class="deprecated"><a href="/google-apps/calendar/v1/developers_guide_protocol" data-title="Google Calendar API v1"><span>Google Calendar API v1<sup>Deprecated</sup></span></a><ul><li class=""><a href="/google-apps/calendar/v1/developers_guide_protocol" data-title="Protocol Guide"><span>Protocol Guide</span></a></li><li class=""><a href="/google-apps/calendar/v1/developers_guide_dotnet" data-title=".NET Guide"><span>.NET Guide</span></a></li><li class=""><a href="/google-apps/calendar/v1/developers_guide_java" data-title="Java Guide"><span>Java Guide</span></a></li><li class=""><a href="/google-apps/calendar/v1/developers_guide_python" data-title="Python Guide"><span>Python Guide</span></a></li><li class=""><a href="/google-apps/calendar/v1/developers_guide_javascript" data-title="JavaScript Guide"><span>JavaScript Guide</span></a></li><li class=""><a href="/google-apps/calendar/v1/reference" data-title="Atom Reference"><span>Atom Reference</span></a></li></ul></li></ul><hr/><ul><li class=""><a href="/google-apps/calendar/gadgets" data-title="Calendar Gadgets"><span>Calendar Gadgets</span></a><ul><li class=""><a href="/google-apps/calendar/gadgets/event/" data-title="Event Gadgets"><span>Event Gadgets</span></a></li><li class=""><a href="/google-apps/calendar/gadgets/sidebar/" data-title="Sidebar Gadgets"><span>Sidebar Gadgets</span></a></li></ul></li></ul><hr/><ul><li class=""><a href="/google-apps/calendar/caldav" data-title="CalDAV Developer&#39;s Guide"><span>CalDAV Developer&#39;s Guide</span></a></li></ul><hr/><ul><li class=""><a href="https://groups.google.com/forum/embed/?place=forum/google-calendar-api&amp;showsearch=true" data-title="Discussions"><span>Discussions</span></a></li><li class=""><a href="http://code.google.com/a/google.com/p/apps-api-issues/issues/list?q=label:API-Calendar" data-title="Issue Tracker"><span>Issue Tracker</span></a></li></ul><hr/><ul><li class=""><a href="/google-apps/calendar/terms" data-title="Terms of Service"><span>Terms of Service</span></a></li></ul></nav>



      </div>
      

      <div id="gc-content"
           
           
           >
        
        <div>
  
          
  
  <h1 itemprop="name" class="page-title" >Google Calendar API v2 Developer's Guide: Protocol</h1>
  
  <div itemprop="articleBody">
  
<img style="float:right; margin-left:10px; margin-bottom:5px;" src="/google-apps/calendar/images/data-api-150.png">

<p>Google Calendar allows client applications to view and update calendar events in the form of Google Data Protocol feeds. Your client application can use the Google Calendar Data API to create new events, edit or delete existing events, and query for events that match particular criteria.</p>
<p>There are many possible uses for the Calendar Data API. For example, you can create a web front end for your group's calendar that uses Google Calendar as a back end. Or you can generate a public calendar for Google Calendar to display, based on your organization's event database. Or you can search relevant calendars to display a list of upcoming events on those calendars.</p>
<p>In addition to providing some background on the capabilities of the Google Calendar Data API, this document provides examples of interacting with the API by sending HTTP messages containing data in Atom (XML) or <a href="#JSON-C">JSON-C</a> format. If you're using one of our <a href="/gdata/docs/client-libraries">client libraries</a> to interact with the API, you may also be interested in exploring the examples in the developer's guide for that client library.</p>

    <h2>Contents</h2>
    <nav class="inline-toc">
    <ol>
      <li><a href="#Audience">Audience</a></li>
      <li><a href="#Terms">Terms of use</a></li>
      <li><a href="#Auth">Authenticating to the Calendar service</a>
        <ol class="toc">
          <li><a href="#AuthOAuth">OAuth for web applications</a></li>
          <li><a href="#AuthInstalledOAuth">OAuth for installed applications</a></li>
          <li><a href="#AuthAuthSub">AuthSub for web applications</a></li>
          <li><a href="#AuthClientLogin">ClientLogin for installed applications</a></li>
          <li><a href="#AuthAdditionalResources">Additional resources</a></li>
          <li><a href="#AuthMagicCookie">Magic cookie authentication</a></li>
        </ol>
      </li>
      <li><a href="#Versioning">Specifying a version</a></li>
      <li><a href="#RetrievingSettings">Retrieving settings</a> <span class="exp-feat">(Experimental)</span></li>
      <li><a href="#RetrievingCalendars">Retrieving calendar lists</a>
        <ol>
          <li><a href="#RetrievingAllCalendars">Retrieving all calendars</a></li>
          <li><a href="#RetrievingOwnCalendars">Retrieving only calendars that a user owns</a></li>
        </ol>
      </li>
      <li><a href="#ManagingCalendars">Managing calendars</a>
        <ol>
          <li><a href="#CreatingCalendars">Creating new calendars</a></li>
          <li><a href="#UpdatingCalendars">Updating existing calendars</a></li>
          <li><a href="#DeletingCalendars">Deleting calendars</a></li>
        </ol>
      </li>
      <li><a href="#ManagingSubscriptions">Managing subscriptions to calendars</a>
        <ol>
          <li><a href="#AddingSubscriptions">Adding new subscriptions</a></li>
          <li><a href="#UpdatingSubscriptions">Updating calendar subscriptions</a></li>
          <li><a href="#DeletingSubscriptions">Deleting subscriptions</a></li>
        </ol>
      </li>
      <li><a href="#RetrievingEvents">Retrieving events</a>
        <ol>
          <li><a href="#RetrievingWithoutQuery">Retrieving events without query parameters</a></li>
          <li><a href="#RetrievingCached">Retrieving an event again</a></li>
          <li><a href="#RetrievingDateRange">Retrieving events for a specified date range</a></li>
          <li><a href="#RetrievingWithQuery">Retrieving events matching a full text query </a></li>
        </ol>
      </li>
      <li><a href="#CreatingEvents">Creating events</a>
        <ol>
          <li><a href="#CreatingSingle">Creating single-occurrence events</a></li>
          <li><a href="#CreatingQuickAdd">Creating quick add events</a></li>
          <li><a href="#CreatingGadgets">Creating Calendar Event Gadgets</a></li>
          <li><a href="#CreatingRecurring">Creating recurring events</a></li>
        </ol>
      </li>
      <li><a href="#UpdatingEvents">Updating events</a></li>
      <li><a href="#DeletingEvents">Deleting events</a></li>
      <li><a href="#SharingACalendar">Sharing calendars</a>
        <ol>
          <li><a href="#RetrieveAcl">Retrieving access control lists</a></li>
          <li><a href="#View_Rule">Retrieving a rule</a></li>
          <li><a href="#AddAcl">Adding a user to an access control list</a></li>
          <li><a href="#UpdateAcl">Updating a user's role in an access control list</a></li>
          <li><a href="#DeleteAcl">Removing a user from an access control list</a></li>
        </ol>
      </li>
      <li><a href="#FreeBusy">Querying busy times</a> <span class="exp-feat">(Experimental)</span></a>
        <ol>
          <li><a href="#UserFreeBusy">Retrieving a user's busy times</a></li>
          <li><a href="#GroupFreeBusy">Retrieving group members' busy times</a></li>
          <li><a href="#BatchFreeBusy">Retrieving multiple user's busy times using a batch request.</a></li>
        </ol>
      </li>
      <li><a href="#AdditionalOps">Additional operations</a>
        <ol>
          <li><a href="#ExtendedProps">Extended properties</a></li>
          <li><a href="#Reminders">Reminders and Notifications</a></li>
          <li><a href="#Comments">Comments</a></li>
          <li><a href="#GeoRSS">GeoRSS data</a></li>
        </ol>
      </li>
      <li><a href="#ImprovingPerformance">Improving performance</a>
        <ol>
          <li><a href="#PartialResponse">Requesting a partial response</a> <span class="exp-feat">(Experimental)</span></li>
          <li><a href="#PartialUpdate">Making a partial update</a> <span class="exp-feat">(Experimental)</span></li>
          <li><a href="#Batch">Performing multiple operations with a batch request</a></li>
          <li><a href="#JSON-C">Using the JSON-C data format</a></li>
        </ol>
      </li>
    </ol>
    </nav>

<h2 id="Audience">Audience</h2>
<p>This document is intended for programmers who want to write client applications that can interact with Google Calendar. It provides a series of examples of basic Data API interactions using HTTP and Atom or JSON-C, with explanations. After reading this document, you may wish to learn more about interacting with the API using our <a href="/gdata/docs/client-libraries">client libraries</a> by reading the language-specific examples found on the other tabs at the top of this document.</p>
<p>For Calendar Data API reference information, see the <a href="reference.html">reference guide</a>. This document assumes that you understand the general ideas behind the <a href="/gdata/docs/2.0/basics">Google Data protocol</a>. Each example in this document shows how to use the bare protocol to interact with Calendar.</p>

<h2 id="Terms">Terms of use</h2>
<p>You agree to abide by the <a href="/google-apps/calendar/terms">Google Calendar Terms of Use</a> when using the Calendar Data API.</p>

<h2 id="Auth">Authenticating to the Calendar service</h2>

<p>To request, add, or delete data, your client application needs an authentication token. You should use OAuth as your application's authentication method. You can use OAuth directly by sending raw HTTP requests, or you can have Google's client libraries handle the authentication for you. For more information about authentication systems, see <a href="/accounts/docs/GettingStarted">Choosing an Auth Mechanism</a>.</p>

<h3 id="AuthOAuth">OAuth for web applications</h3>
<p>OAuth is the preferred method for getting authorized access to a user's Google data. OAuth is an <a href="http://oauth.net/">open standard</a> for authorizing the use of data on the web. You can use OAuth for authorization with the Calendar service, other Google services, or with services from other companies that have adopted the standard.</p>

<p class="note"><b>Note:</b> If you have used AuthSub previously, you should transition to <a href="/accounts/docs/OAuth">OAuth</a>. OAuth is similar to the <a href="/accounts/docs/AuthSub#signingrequests">secure and registered mode</a> of AuthSub, in that all data requests must be digitally signed and you must register your domain.</p>

<div class="tog-content">

<p>To use OAuth, your application must obtain an access token by following this sequence of token requests:</p>
<ol>
  <li>Get an unauthorized request token (<a href="/accounts/docs/OAuth_ref#RequestToken">OAuthGetRequestToken</a>). Use the following <code>scope</code> parameter:
  <pre><code>https://www.google.com/calendar/feeds/</code></pre></li>
  <li>Ask the user to authorize the request token (<a href="/accounts/docs/OAuth_ref#GetAuth">OAuthAuthorizeToken</a>).</li>
  <li>Exchange the authorized request token for an access token (<a href="/accounts/docs/OAuth_ref#AccessToken">OAuthGetAccessToken</a>).</li>
</ol>

<p>For more information on this process, see
<a href="/accounts/docs/OAuth">OAuth Authentication for Web Applications</a> documentation. Once you have an OAuth access token, your application can send requests by constructing an appropriate <code>oauth_signature</code> and <code>Authorization</code> header.</p>

<h4>Example request</h4>

<p>You can use the access token to request calendar data. This example requests a list of calendars owned by the user. You make this request by sending an HTTP <code>GET</code> to <code>https://www.google.com/calendar/feeds/default/owncalendars/full</code>. First, construct the signature base string:</p>
<pre>
GET&amp;https://www.google.com/calendar/feeds/default/owncalendars/full&amp;oauth_consumer_key=example.com&amp;oauth_nonce=38863f48...28dd9fd2c&amp;oauth_signature_method=RSA-SHA1&amp;oauth_timestamp=1249972977&amp;oauth_token=1%2Fz1...LMzNBrKhElA&amp;oauth_version=1.0
</pre>

<p>Next, set the <code>oauth_signature</code> to the result of signing the base string with the algorithm you specify in
<code>oauth_signature_method</code>. This requires URL-encoding the base string you just constructed, which results in the following:</p>

<pre>
GET&amp;https%3a%2f%2fwww.google.com%2fcalendar%2ffeeds%2fdefault%2fowncalendars%2ffull&amp;oauth_consumer_key%3Dexample.com%26oauth_nonce%3D38863f48...28dd9fd2c%26oauth_signature_method%3DRSA-SHA1%26oauth_timestamp%3D1249972977%26oauth_token%3D1%252Fz1...LMzNBrKhElA%26oauth_version%3D1.0
</pre>

<p>The complete example request looks like this:</p>

<pre>
GET /feeds/default/owncalendars/full HTTP/1.1
Host: www.google.com
Accept: */*
Authorization: OAuth oauth_version=&quot;1.0&quot;, oauth_nonce=&quot;38863f48...28dd9fd2c&quot;, oauth_timestamp=&quot;1249972977&quot;, oauth_consumer_key=&quot;example.com&quot;, oauth_token=&quot;1%2Fz1...LMzNBrKhElA&quot;, oauth_signature_method=&quot;RSA-SHA1&quot;, oauth_signature=&quot;kH%2BjQd%2Ba8...odMeUnsU%2FxANOw%3D&quot;
</pre>

<p class="note"><b>Note:</b> Depending on the method you use for sending the HTTP GET, you might have to URL-encode this request.</p>

<p>This example assumes <code>example.com</code> has already been <a href="/accounts/docs/RegistrationForWebAppsAuto">registered with Google</a>.</p>

<p>For more information on constructing the OAuth base string and <code>Authorization</code> header, see the <a href="#AuthAdditionalResources">reference links</a> at the end of this authentication section</a>.</p>

</div>

<h3 id="AuthInstalledOAuth">OAuth for installed applications</h3>

<p>OAuth is the preferred method for getting authorized access to a user's Google data. OAuth is an <a href="http://oauth.net/">open standard</a> for authorizing the use of data on the web. You can use OAuth for authorization with the Calendar service, other Google services, or with services from other companies that have adopted the standard.</p>

<p class="note"><b>Note:</b> If you have used AuthSub previously, you should transition to <a href="/accounts/docs/OAuth">OAuth</a>. OAuth is similar to the <a href="/accounts/docs/AuthSub#signingrequests">secure and registered mode</a> of AuthSub, in that all data requests must be digitally signed and you must register your domain.</p>

<div class="tog-content">

<p>To use OAuth, your application must obtain an access token by following this sequence of token requests:</p>
<ol>
  <li>Get an unauthorized request token (<a href="/accounts/docs/OAuth_ref#RequestToken">OAuthGetRequestToken</a>). Use the following <code>scope</code> parameter:
  <pre><code>https://www.google.com/calendar/feeds/</code></pre></li>
  <li>Ask the user to authorize the request token (<a href="/accounts/docs/OAuth_ref#GetAuth">OAuthAuthorizeToken</a>).</li>
  <li>Exchange the authorized request token for an access token (<a href="/accounts/docs/OAuth_ref#AccessToken">OAuthGetAccessToken</a>).</li>
</ol>

<p>For more information on this process, see
<a href="/accounts/docs/OAuth">OAuth Authentication for Web Applications</a> documentation. Once you have an OAuth access token, your application can send requests by constructing an appropriate <code>oauth_signature</code> and <code>Authorization</code> header.</p>

<h4>Example request</h4>

<p>You can use the access token to request calendar data. This example requests a list of calendars owned by the user. You make this request by sending an HTTP <code>GET</code> to <code>https://www.google.com/calendar/feeds/default/owncalendars/full</code>. First, construct the signature base string:</p>
<pre>
GET&amp;https://www.google.com/calendar/feeds/default/owncalendars/full&amp;oauth_consumer_key=anonymous&amp;oauth_nonce=38863f48...28dd9fd2c&amp;oauth_signature_method=HMAC-SHA1&amp;oauth_timestamp=1249972977&amp;oauth_token=1%2Fz1...LMzNBrKhElA&amp;oauth_version=1.0
</pre>

<p>Note that when using OAuth with an installed application, you use <code>anonymous</code> as the value for <code>&oauth_consumer_key</code>.</p> 

<p>Next, set the <code>oauth_signature</code> to the result of signing the base string with the algorithm you specify in
<code>oauth_signature_method</code>. This requires URL-encoding the base string you just constructed, which results in the following:</p>

<pre>
GET&amp;https%3a%2f%2fwww.google.com%2fcalendar%2ffeeds%2fdefault%2fowncalendars%2ffull&amp;oauth_consumer_key%3Danonymous%26oauth_nonce%3D38863f48...28dd9fd2c%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1249972977%26oauth_token%3D1%252Fz1...LMzNBrKhElA%26oauth_version%3D1.0
</pre>

<p>The complete example request looks like this:</p>

<pre>
GET /feeds/default/owncalendars/full HTTP/1.1
Host: www.google.com
Accept: */*
Authorization: OAuth oauth_version=&quot;1.0&quot;, oauth_nonce=&quot;38863f48...28dd9fd2c&quot;, oauth_timestamp=&quot;1249972977&quot;, oauth_consumer_key=&quot;anonymous&quot;, oauth_token=&quot;1%2Fz1...LMzNBrKhElA&quot;, oauth_signature_method=&quot;HMAC-SHA1&quot;, oauth_signature=&quot;kH%2BjQd%2Ba8...odMeUnsU%2FxANOw%3D&quot;
</pre>

<p class="note"><b>Note:</b> Depending on the method you use for sending the HTTP GET, you might have to URL-encode this request.</p>

<p>For more information on constructing the OAuth base string and <code>Authorization</code> header, see
the <a href="#AuthAdditionalResources">reference links</a> at the end of this authentication section</a>.</p>

</div>

<h3 id="AuthAuthSub">AuthSub for web applications</h3>
<p>You should use OAuth for authentication in your web applications and installed applications. If you're developing a web application and you're unable to use OAuth, you can use <a href="/accounts/docs/AuthSub">AuthSub authentication</a> until you're able to transition to OAuth. With AuthSub, your application acquires and uses a token for authorized access to the user's data.</p>

<div class="tog-content">

<p>To acquire an AuthSub token for a given Calendar user, your application must redirect users to the
<code>AuthSubRequest</code> URL at Google, which prompts them to log into a Google account.</p>
<p>After the user logs in, the AuthSub system redirects them to the URL you specified in the <code>next</code> query parameter of the <code>AuthSubRequest</code> URL. The AuthSub system appends an authentication token to the <code>next</code> URL as the value of the <code>token</code> query parameter. Your application then uses that authentication token in subsequent interactions with the Calendar API.</p>

<p>The following example shows a request to authorize www.example.com:</p>
<pre>
https://www.google.com/accounts/AuthSubRequest?scope=https%3A%2F%2Fwww.google.com%2Fcalendar%2Ffeeds%2F&amp;session=1&amp;secure=0&amp;next=http%3A%2F%2Fwww.example.com%2Fwelcome.html
</pre>

<p>For the Calendar API, use the following <code>scope</code> parameter:</p>
<pre><code>https://www.google.com/calendar/feeds/</code></pre>
<p>For a list of valid scopes for other Google Data APIs, see the <a href="/google-apps/documents-list/#AuthScopes">FAQ</a>.</p>

<h3 id="AuthSubSessionToken">Upgrading to a session token</h3>
<p>By default, the AuthSub token can only be used for one request. To use a token for multiple requests, it must be upgraded by making an HTTP <code>GET</code> request containing the single use token as an Authorization header.
A token can be upgraded only if the initial AuthSub request included <code>session=1</code> as a URL parameter.</p>

<pre>GET /accounts/AuthSubSessionToken HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Authorization: AuthSub token="<span class="personalize">yourSingleUseToken</span>"
Host: https://www.google.com
Connection: keep-alive</pre>

<p>If the token was upgraded successfully, the server's response contains the new token information in the HTTP headers.
Here's an example response:</p>
<pre>Token=DQAA...7DCTN</pre>

<p>Use the authentication token to create an Authorization header for each request:</p>
<pre>Authorization: AuthSub token="<span class="personalize">yourSessionToken</span>"</pre>

<p>Note that the <code>token</code> value in the Authorization header should be enclosed in quotation marks.</p>

</div>

<h3 id="AuthClientLogin">ClientLogin for installed applications</h3>

<p>You should use OAuth for authentication in your web applications and installed applications. If you're developing an installed application and you're unable to use OAuth, you can use <a href="/accounts/docs/AuthForInstalledApps">ClientLogin authentication</a> until you're able to transition to OAuth. With ClientLogin, your application prompts the user for username and password on first run. After that, your application uses a token for authorized access to the user's data.</p>

<div class="tog-content">

<p>To authenticate the user, send a <code>POST</code> request to the following URL:</p>
<pre>https://www.google.com/accounts/ClientLogin</pre>

<p>Include the relevant parameters in the body of the <code>POST</code> request, as described in the
<a href="/accounts/docs/AuthForInstalledApps">ClientLogin documentation</a>. The service name for Calendar
is <a href="/google-apps/documents-list/#clientlogin"><code>cl</code></a>.</p>
<p>If the request succeeds, then the response contains an alphanumeric string labeled <code>Auth</code>.</p>
<p>After a successful authentication request, use the <code>Auth</code> value to create an Authorization header for each request:</p>

<pre class="prettyprint">Authorization: GoogleLogin auth=<span class="personalize">yourAuthValue</span></pre>

</div>

<h3 id="AuthMagicCookie">Magic cookie authentication</h3>
<p>The simplest feed URL to use is that of the calendar's read-only, "magic cookie" private feed, because that URL doesn't require authentication. The usual procedure for determining that URL involves using a JavaScript-enabled GUI browser to get the URL manually. If you can't or don't want to use such a browser, then you can instead interact with Calendar using one of the other feed URLs, which require authentication, but which you can construct without using a browser.</p>
<p>To find your calendar's "magic cookie" feed URL:</p>
<ol>
  <li>In the list of calendars on the left side of the page, find the calendar you want to interact with. You can create a new calendar for this purpose if you want to.</li>
  <li>Click the arrow button to the right of the calendar. Select "Calendar settings" from the drop-down menu. The Calendar Details page appears.</li>
  <li>Scroll down to the Private Address section and select the XML button. The feed URL appears.</li>
  <li>Copy the URL. This is the URL of your calendar's read-only "magic cookie" private feed; it includes a special coded string that lets you read the private feed without having to do authentication. This is the URL you'll use to request a feed from Calendar, so you won't have to do authentication just to view the feed.</li>
</ol>
<p>The feed URL has the following form:</p>
<pre>https://www.google.com/calendar/feeds/<i>userID</i>/private-<i>magicCookie</i>/basic</pre>
<p>You can modify this URL in the following ways:</p>
<ul>
  <li>If you want a private feed that requires authentication, convert the "private-{magic-cookie}" part of this path to just "private".</li>
  <li>If you want the "full" calendar project, change the last component from "basic" to "full".</li>
</ul>
<p>The "basic" form of the feed holds event information that is formatted for reading, more suited to human consumption of the feed. The "full" form of the feed holds structured events that are represented as "Kinds", so they are more suited to computer processing.</p>
<p>If you're looking at settings for the user's main calendar, then <code>userID</code> is the user's email address. If you're looking at settings for another calendar, then <code>userID</code> is a longer and more complicated email address. In either case, <code>magicCookie</code> is a special code that lets you read the private feed without having to do authentication. Here's an example of a feed URL:</p>
<pre>https://www.google.com/calendar/feeds/jo@gmail.com/private-08ce2fac8efa42f2a0d04eceb7d68cc9/full</pre>
<p>Under some circumstances, you may want to generate a new "magic cookie" URL. (Note that if someone else gets access to that URL, they can view your calendar without authentication.) To do that, click the "Reset Private URLs" link in the Calendar Details page.</p>

<h3 id="AuthAdditionalResources">Need more information on authorization?</h3>
<p>More details on working with the different authentication methods, including information on registering your web application with
Google and other topics, see:</p>
<ul>
<li>General <a href="/gdata/docs/auth/overview#OAuth">OAuth Overview</a>, and complete <a href="/accounts/docs/OAuth">OAuth for Web Applications</a> and <a href="/accounts/docs/OAuthForInstalledApps">OAuth for Installed Applications</a></li>
<li>General <a href="/gdata/docs/auth/overview#AuthSub">AuthSub Overview</a>, and complete <a href="/accounts/docs/AuthSub">AuthSub Authentication for Web Applications</a></li>
<li>General <a href="/gdata/docs/auth/overview#ClientLogin">ClientLogin Overview</a>, and complete <a href="/accounts/docs/AuthForInstalledApps">ClientLogin for Installed Applications</a></li>
<li><a href="/gdata/docs/auth/oauth">Using OAuth with the Google Data API Client Libraries</a></li>
<li><a href="/gdata/docs/auth/authsub">Using AuthSub with the Google Data API Client Libraries</a></li>
<li><a href="/gdata/docs/auth/clientlogin">Using ClientLogin with the Google Data API Client Libraries</a></li>
</ul>

<h2 id="Versioning">Specifying a version</h2>
<p>Every request that you send using the Calendar Data API should specify version 2 of the API.</p>
<p>To specify a version number, use the <code>GData-Version</code> HTTP header:</p>
<pre>
GData-Version: 2
</pre>
<p>Alternatively, if you can't set HTTP headers, you can specify <code>v=2</code> as a query parameter in the URL. But the HTTP header is preferred where possible.</p>
<p class="note"><strong>Note</strong>: The client libraries supply appropriate version headers automatically, so don't use the <code>v=2</code> query parameter when you're using a client library.</p>

<h2 id="RetrievingSettings">Retrieving settings <span class="exp-feat">(Experimental)</span></h2>

<p>The Calendar Data API provides access to a read-only view of a user's current settings as set within the Google Calendar HTML interface. This can be retrieved by sending an authenticated <code>GET</code> request to the <em>settings</em> feed URL:

<pre>https://www.google.com/calendar/feeds/<i>userId</i>/settings</pre>

<p>(To request JSON-C format, append the <code>alt=jsonc</code> query parameter.)</p>

<p>The result is a feed that includes all of the user's settings as key/value pairs:

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;feed xmlns=&quot;http://www.w3.org/2005/Atom&quot;
    xmlns:openSearch=&quot;http://a9.com/-/spec/opensearch/1.1/&quot;
    xmlns:gCal=&quot;http://schemas.google.com/gCal/2005&quot;
    xmlns:gd=&quot;http://schemas.google.com/g/2005&quot;
    gd:etag=&quot;W/&amp;quot;Ck8FQ3Y4cCp7I2A9WxVVEkU.&amp;quot;&quot;&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/default/settings&lt;/id&gt;
  &lt;updated&gt;2009-03-05T10:46:25.244Z&lt;/updated&gt;
  &lt;title type=&quot;text&quot;&gt;Coach&#x27;s&#x27;s personal settings&lt;/title&gt;
  &lt;link rel=&quot;alternate&quot; type=&quot;text/html&quot; href=&quot;https://www.google.com/calendar/feeds/render&quot;/&gt;
  &lt;link rel=&quot;http://schemas.google.com/g/2005#feed&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings&quot;/&gt;
  &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings&quot;/&gt;
  &lt;author&gt;
    &lt;name&gt;Coach&lt;/name&gt;
    &lt;email&gt;user@gmail.com&lt;/email&gt;
  &lt;/author&gt;
  &lt;generator version=&quot;1.0&quot; uri=&quot;http://www.google.com/calendar&quot;&gt;Google Calendar&lt;/generator&gt;
  &lt;openSearch:startIndex&gt;1&lt;/openSearch:startIndex&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/alternateCalendar&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/alternateCalendar&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;alternateCalendar&quot; value=&quot;0&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/country&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/country&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;country&quot; value=&quot;EH&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/customCalMode&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/customCalMode&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;customCalMode&quot; value=&quot;custom,14&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/dateFieldOrder&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/dateFieldOrder&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;dateFieldOrder&quot; value=&quot;MDY&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/defaultCalMode&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/defaultCalMode&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;defaultCalMode&quot; value=&quot;custom&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/displayAllTimezones&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/displayAllTimezones&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;displayAllTimezones&quot; value=&quot;false&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/format24HourTime&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/format24HourTime&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;format24HourTime&quot; value=&quot;false&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/hideInvitations&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/hideInvitations&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;hideInvitations&quot; value=&quot;false&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/hideWeekends&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/hideWeekends&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;hideWeekends&quot; value=&quot;false&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/locale&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/locale&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;locale&quot; value=&quot;en&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/showDeclinedEvents&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/showDeclinedEvents&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;showDeclinedEvents&quot; value=&quot;true&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/timezone&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/timezone&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;timezone&quot; value=&quot;America/Los_Angeles&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/timezoneLabel&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/timezoneLabel&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;timezoneLabel&quot; value=&quot;&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/userLocation&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/userLocation&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;userLocation&quot; value=&quot;94043&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/weather&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/weather&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;weather&quot; value=&quot;&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/settings/weekStart&lt;/id&gt;
    &lt;updated&gt;2009-03-05T10:46:25.245Z&lt;/updated&gt;
    &lt;link rel=&quot;self&quot; type=&quot;application/atom+xml&quot; href=&quot;https://www.google.com/calendar/feeds/default/settings/weekStart&quot;/&gt;
    &lt;gCal:settingsProperty name=&quot;weekStart&quot; value=&quot;0&quot;/&gt;
  &lt;/entry&gt;
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#settingFeed",
    "id": "http://www.google.com/calendar/feeds/default/settings",
    "author": {
      "displayName": "Coach",
      "email": "user@gmail.com"
    },
    "selfLink": "https://www.google.com/calendar/feeds/default/settings?alt\u003djsonc",
    "items": [
      {
        "kind": "calendar#settings",
        "id": "alternateCalendar",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/alternateCalendar",
        "value": "0"
      },
      {
        "kind": "calendar#settings",
        "id": "country",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/country",
        "value": "CH"
      },
      {
        "kind": "calendar#settings",
        "id": "customCalMode",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/customCalMode",
        "value": "custom,4"
      },
      {
        "kind": "calendar#settings",
        "id": "dateFieldOrder",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/dateFieldOrder",
        "value": "MDY"
      },
      {
        "kind": "calendar#settings",
        "id": "defaultCalMode",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/defaultCalMode",
        "value": "week"
      },
      {
        "kind": "calendar#settings",
        "id": "displayAllTimezones",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/displayAllTimezones",
        "value": "false"
      },
      {
        "kind": "calendar#settings",
        "id": "format24HourTime",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/format24HourTime",
        "value": "false"
      },
      {
        "kind": "calendar#settings",
        "id": "hideInvitations",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/hideInvitations",
        "value": "false"
      },
      {
        "kind": "calendar#settings",
        "id": "hideWeekends",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/hideWeekends",
        "value": "false"
      },
      {
        "kind": "calendar#settings",
        "id": "locale",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/locale",
        "value": "en"
      },
      {
        "kind": "calendar#settings",
        "id": "showDeclinedEvents",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/showDeclinedEvents",
        "value": "true"
      },
      {
        "kind": "calendar#settings",
        "id": "timezone",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/timezone",
        "value": "Europe/Zurich"
      },
      {
        "kind": "calendar#settings",
        "id": "timezoneLabel",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/timezoneLabel",
        "value": ""
      },
      {
        "kind": "calendar#settings",
        "id": "userLocation",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/userLocation",
        "value": ""
      },
      {
        "kind": "calendar#settings",
        "id": "weather",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/weather",
        "value": ""
      },
      {
        "kind": "calendar#settings",
        "id": "weekStart",
        "selfLink": "https://www.google.com/calendar/feeds/default/settings/weekStart",
        "value": "0"
      }
    ]
  }
}
</pre>
</section>
</div>

<p>A list of settings and their values can be found in the reference guide under <code><a href="reference.html#gCalsettingsProperty">gCal:settingsProperty</a></code>.</p>

<h2 id="RetrievingCalendars">Retrieving calendar lists</h2>
<p>The Calendar Data API provides several ways to access the list of calendars that appear in the Google Calendar web application. There are three types of calendars in this list: primary, secondary, and imported calendars. A primary calendar is created for a user when they sign up for a Google Calendar account. All other calendars created by that user are called secondary calendars. Imported calendars are calendars that a user subscribes to that someone else has created.</p>

<h3 id="RetrievingAllCalendars">Retrieving all calendars</h3>
<p>You can get a list of a user's calendars by sending an authenticated <code>GET</code> request to the <i>allcalendars</i> feed URL:</p>
<pre>https://www.google.com/calendar/feeds/default/allcalendars/full</pre>
<p>(To request JSON-C format, append the <code>alt=jsonc</code> query parameter.)</p>
<p>The result is a feed that includes all primary, secondary, and imported calendars:</p>


<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;?xml version='1.0' encoding='utf-8'?&gt;
&lt;feed xmlns='http://www.w3.org/2005/Atom'
    xmlns:openSearch='http://a9.com/-/spec/opensearch/1.1/'
    xmlns:gCal='http://schemas.google.com/gCal/2005'
    xmlns:gd='http://schemas.google.com/g/2005'
    gd:etag='W/"CkYFSHg-fyp7ImA9WxRVGUo."'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/default/allcalendars/full&lt;/id&gt;
  &lt;updated&gt;2008-11-18T01:01:59.657Z&lt;/updated&gt;
  &lt;title&gt;Coach's Calendar List&lt;/title&gt;
  &lt;link rel='alternate' type='text/html'
    href='https://www.google.com/calendar/render' /&gt;
  &lt;link rel='http://schemas.google.com/g/2005#feed'
    type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/default/allcalendars/full' /&gt;
  &lt;link rel='http://schemas.google.com/g/2005#post'
    type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/default/allcalendars/full' /&gt;
  &lt;link rel='self' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/default/allcalendars/full' /&gt;
  &lt;author&gt;
    &lt;name&gt;Coach&lt;/name&gt;
    &lt;email&gt;user@gmail.com&lt;/email&gt;
  &lt;/author&gt;
  &lt;generator version='1.0' uri='http://www.google.com/calendar'&gt;Google Calendar&lt;/generator&gt;
  &lt;openSearch:startIndex&gt;1&lt;/openSearch:startIndex&gt;
  &lt;entry gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."'&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/allcalendars/full/user%40gmail.com&lt;/id&gt;
    &lt;published&gt;2007-07-11T22:10:30.257Z&lt;/published&gt;
    &lt;updated&gt;2007-07-11T21:46:35.000Z&lt;/updated&gt;
    &lt;title&gt;My Primary Calendar&lt;/title&gt;
    &lt;summary type='text'&gt;A primary calendar is created by default for each Google Calendar user.&lt;/summary&gt;
    &lt;link rel='alternate' type='application/atom+xml' href='https://www.google.com/calendar/feeds/user%40gmail.com/private/full' /&gt;
    &lt;link rel='http://schemas.google.com/gCal/2005#eventFeed' type='application/atom+xml' href='https://www.google.com/calendar/feeds/user%40gmail.com/private/full' /&gt;
    &lt;link rel='http://schemas.google.com/acl/2007#accessControlList' type='application/atom+xml' href='https://www.google.com/calendar/feeds/user%40gmail.com/acl/full' /&gt;
    &lt;link rel='self' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/allcalendars/full/user%40gmail.com' /&gt;
    &lt;link rel='edit' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/allcalendars/full/user%40gmail.com' /&gt;
    &lt;author&gt;
      &lt;name&gt;Coach&lt;/name&gt;
      &lt;email&gt;user@gmail.com&lt;/email&gt;
    &lt;/author&gt;
    &lt;gCal:timezone value='America/Los_Angeles' /&gt;
    &lt;gCal:hidden value='false' /&gt;
    &lt;gCal:color value='#2952A3' /&gt;
    &lt;gCal:selected value='true' /&gt;
    &lt;gCal:accesslevel value='owner' /&gt;
    &lt;gd:where valueString='Mountain View' /&gt;
  &lt;/entry&gt;
  &lt;entry gd:etag='W/"Ck4GRH4-eSp7ImA9WxRVGUo."'&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/allcalendars/full/rf1c66uld6dgk2t5lh43svev6g%40group.calendar.google.com&lt;/id&gt;
    &lt;published&gt;2007-07-11T22:10:30.258Z&lt;/published&gt;
    &lt;updated&gt;2007-07-11T21:50:15.000Z&lt;/updated&gt;
    &lt;title&gt;Little Giants&lt;/title&gt;
    &lt;summary type='text'&gt;This calendar contains practice times and this season's Little League game schedule. Go Little Giants!&lt;/summary&gt;
    &lt;link rel='alternate' type='application/atom+xml' href='https://www.google.com/calendar/feeds/rf1c66uld6dgk2t5lh43svev6g%40group.calendar.google.com/private/full'/&gt;
    &lt;link rel='http://schemas.google.com/gCal/2005#eventFeed' type='application/atom+xml' href='https://www.google.com/calendar/feeds/rf1c66uld6dgk2t5lh43svev6g%40group.calendar.google.com/private/full'/&gt;
    &lt;link rel='http://schemas.google.com/acl/2007#accessControlList' type='application/atom+xml' href='https://www.google.com/calendar/feeds/rf1c66uld6dgk2t5lh43svev6g%40group.calendar.google.com/acl/full'/&gt;
    &lt;link rel='self' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/allcalendars/full/rf1c66uld6dgk2t5lh43svev6g%40group.calendar.google.com'/&gt;
    &lt;link rel='edit' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/allcalendars/full/rf1c66uld6dgk2t5lh43svev6g%40group.calendar.google.com'/&gt;
    &lt;author&gt;
      &lt;name&gt;Little Giants&lt;/name&gt;
    &lt;/author&gt;
    &lt;gCal:timezone value='America/Los_Angeles' /&gt;
    &lt;gCal:hidden value='false' /&gt;
    &lt;gCal:color value='#5A6986' /&gt;
    &lt;gCal:selected value='false' /&gt;
    &lt;gCal:accesslevel value='owner' /&gt;
    &lt;gd:where valueString='San Francisco' /&gt;
  &lt;/entry&gt;
  &lt;entry gd:etag='W/"C0cEQnkyeip7ImA9WxRVGUo."'&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/allcalendars/full/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com&lt;/id&gt;
    &lt;published&gt;2007-07-11T22:10:30.297Z&lt;/published&gt;
    &lt;updated&gt;2007-06-05T09:38:50.000Z&lt;/updated&gt;
    &lt;title&gt;Google Doodles&lt;/title&gt;
    &lt;summary type='text'/&gt;
    &lt;link rel='alternate' type='application/atom+xml' href='https://www.google.com/calendar/feeds/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com/private/full'/&gt;
    &lt;link rel='http://schemas.google.com/gCal/2005#eventFeed' type='application/atom+xml' href='https://www.google.com/calendar/feeds/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com/private/full'/&gt;
    &lt;link rel='self' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/allcalendars/full/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com'/&gt;
    &lt;link rel='edit' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/allcalendars/full/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com'/&gt;
    &lt;author&gt;
      &lt;name&gt;Google Doodles&lt;/name&gt;
    &lt;/author&gt;
    &lt;gCal:timezone value='Etc/GMT' /&gt;
    &lt;gCal:hidden value='false' /&gt;
    &lt;gCal:color value='#5229A3' /&gt;
    &lt;gCal:selected value='false' /&gt;
    &lt;gCal:accesslevel value='read' /&gt;
    &lt;gd:where valueString='' /&gt;
  &lt;/entry&gt;
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#calendarFeed",
    "etag": "W/\"AkQBSH8-fSp7IWA9WxBaGEs.\"",
    "id": "http://www.google.com/calendar/feeds/default/allcalendars/full",
    "updated": "2010-03-29T13:12:39.155Z",
    "author": {
      "displayName": "Coach",
      "email": "user@gmail.com"
    },
    "feedLink": "https://www.google.com/calendar/feeds/default/allcalendars/full",
    "selfLink": "https://www.google.com/calendar/feeds/default/allcalendars/full?alt\u003djsonc",
    "canPost": true,
    "items": [
      {
        "kind": "calendar#calendar",
        "etag": "W/\"Ck4FQX47eCp7IWA9WxBaFEk.\"",
        "id": "http://www.google.com/calendar/feeds/default/calendars/full/user%40google.com",
        "created": "2010-03-29T13:12:38.877Z",
        "updated": "2010-03-24T14:28:30.000Z",
        "title": "My Primary Calendar",
        "eventFeedLink": "https://www.google.com/calendar/feeds/user%40gmail.com/private/full",
        "accessControlListLink": "https://www.google.com/calendar/feeds/user%40gmail.com/acl/full",
        "selfLink": "https://www.google.com/calendar/feeds/default/allcalendars/full/user%40gmail.com",
        "canEdit": true,
        "author": {
         "displayName": "Coach",
         "email": "user@gmail.com"
        },
        "accessLevel": "owner",
        "color": "#A32929",
        "hidden": false,
        "selected": true,
        "timeZone": "America/Los_Angeles",
        "location": "Moutani View",
        "timesCleaned": 0
      },
      {
        "kind": "calendar#calendar",
        "etag": "W/\"CUMCQX47eCp7IWA9WxBaGEk.\"",
        "id": "http://www.google.com/calendar/feeds/default/calendars/p%23moonphase%40group.v.calendar.google.com",
        "created": "2010-03-29T13:12:38.861Z",
        "updated": "2010-03-29T06:17:40.000Z",
        "title": "Phases of the Moon",
        "details": "Shows the primary phases of the Moon",
        "eventFeedLink": "https://www.google.com/calendar/feeds/p%23moonphase%40group.v.calendar.google.com/private/full",
        "selfLink": "https://www.google.com/calendar/feeds/default/allcalendars/full/p%23moonphase%40group.v.calendar.google.com",
        "canEdit": true,
        "author": {
         "displayName": "Phases of the Moon"
        },
        "accessLevel": "read",
        "color": "#AB8B00",
        "hidden": false,
        "selected": false,
        "timeZone": "Europe/Zurich",
        "timesCleaned": 0
      }
    ]
  }
}
</pre>
</section>
</div>

<p>For information about <code>accessLevel</code>, <code>color</code>, <code>hidden</code>, <code>selected</code>, and <code>timeZone</code>, see <a href="reference.html#gcal_reference">GCal namespace element reference</a>.</p>
<p class="note"><strong>Note:</strong> This feed is accessible only using an authentication token, so you cannot use a <a href="#AuthMagicCookie">magic cookie</a> URL to access the feed. For information on authentication, see the earlier <a href="#Auth">Authenticating to the Calendar service</a> section.</p>

<h3 id="RetrievingOwnCalendars">Retrieving only calendars that a user owns</h3>
<p>There is also an <i>owncalendars</i> feed that you can query to retrieve the list of calendars that the authenticated user has <code>owner</code> access to. The <i>owncalendars</i> feed is located at:</p>
<pre>https://www.google.com/calendar/feeds/default/owncalendars/full</pre>
<p>(To request JSON-C format, append the <code>alt=jsonc</code> query parameter.)</p>
<p>Querying this feed will return a list of calendars that includes the user's primary and secondary calendars, as well as any imported calendars for which the user has been granted ownership. The feed will resemble the feed in the previous example, but it will contain only calendars where the <code>&lt;gCal:accesslevel&gt;</code> (or the <code>accessLevel</code>, in JSON-C) has a value of <code>owner</code>.</p>

<h2 id="ManagingCalendars">Managing Calendars</h2>
<p>The <i>owncalendars</i> feed can also be used to create, update, and delete calendars. Calendars created through the <i>owncalendars</i> feed will be secondary calendars.</p>

<h3 id="CreatingCalendars">Creating new calendars</h3>
<p>To create a new calendar, first create the Atom or JSON-C code for a calendar <code>&lt;entry&gt;</code> element or <code>data</code> object like the ones in the previous example. For example, you might create the following code to represent a calendar to keep track of your Little League team:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'
       xmlns:gd='http://schemas.google.com/g/2005'
       xmlns:gCal='http://schemas.google.com/gCal/2005'&gt;
  &lt;title type='text'&gt;Little League Schedule&lt;/title&gt;
  &lt;summary type='text'&gt;This calendar contains the practice schedule and game times.&lt;/summary&gt;
  &lt;gCal:timezone value='America/Los_Angeles'&gt;&lt;/gCal:timezone&gt;
  &lt;gCal:hidden value='false'&gt;&lt;/gCal:hidden&gt;
  &lt;gCal:color value='#2952A3'&gt;&lt;/gCal:color&gt;
  &lt;gd:where rel='' label='' valueString='Oakland'&gt;&lt;/gd:where&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "data": {
    "title": "Little League Schedule",
    "details": "This calendar contains the practice schedule and game times.",
    "timeZone": "America/Los_Angeles",
    "hidden": false,
    "color": "#2952A3",
    "location": "Oakland"
  }
}
</pre>
</section>
</div>

<p>To insert this calendar, send an HTTP <code>POST</code> message with the above code in the message body, using the <code>application/atom+xml</code> or <code>application/json</code> content type (as appropriate), to the <i>owncalendars</i> feed URL:</p>
<pre>POST https://www.google.com/calendar/feeds/default/owncalendars/full</pre>
<p>Upon success, the server will respond with an HTTP <code>201 Created</code> message that contains the calendar data you submitted, but with some additional elements and properties (shown in bold) that are set by the server, such as <code>id</code>, <code>updated</code>, and multiple link elements and properties:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'
       xmlns:gCal='http://schemas.google.com/gCal/2005'
       xmlns:gd='http://schemas.google.com/g/2005'
       <b>gd:etag='W/"C0UARno6fSp7ImA9WxRVGUo."'</b>&gt;
  <b>&lt;id&gt;http://www.google.com/calendar/feeds/default/owncalendars/full/ppgcfga9qo8jmdwan231w7s8h4%40group.calendar.google.com&lt;/id&gt;
  &lt;published&gt;2007-07-12T16:46:11.815Z&lt;/published&gt;
  &lt;updated&gt;2007-07-12T16:46:11.000Z&lt;/updated&gt;</b>
  &lt;title type='text'&gt;Little League Schedule&lt;/title&gt;
  &lt;summary type='text'&gt;This calendar contains the practice schedule and game times.&lt;/summary&gt;
  <b>&lt;link rel='alternate' type='application/atom+xml' href='https://www.google.com/calendar/feeds/<i>calendarID</i>/private/full'/&gt;
  &lt;link rel='http://schemas.google.com/gCal/2005#eventFeed' type='application/atom+xml' href='https://www.google.com/calendar/feeds/<i>calendarID</i>/private/full'/&gt;
  &lt;link rel='http://schemas.google.com/acl/2007#accessControlList' type='application/atom+xml' href='https://www.google.com/calendar/feeds/<i>calendarID</i>/acl/full'/&gt;
  &lt;link rel='self' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/owncalendars/full/<i>calendarID</i>'/&gt;
  &lt;link rel='edit' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/owncalendars/full/<i>calendarID</i>'/&gt;
  &lt;author&gt;
    &lt;name&gt;Little League Schedule&lt;/name&gt;
  &lt;/author&gt;</b>
  &lt;gCal:timezone value='America/Los_Angeles'/&gt;
  &lt;gCal:hidden value='false'/&gt;
  &lt;gCal:color value='#2952A3'/&gt;
  <b>&lt;gCal:selected value='false'/&gt;
  &lt;gCal:accesslevel value='owner'/&gt;</b>
  &lt;gd:where valueString='Oakland'/&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    <b>"kind": "calendar#calendar",</b>
    <b>"etag": "W/\"D0cGQn47eCp7IWA9WxBaGEo.\"",</b>
    <b>"id": "http://www.google.com/calendar/feeds/default/calendars/<i>calendarID</i>",</b>
    <b>"created": "2010-03-29T15:03:55.789Z",</b>
    <b>"updated": "2010-03-29T15:03:43.000Z",</b>
    "title": "Little League Schedule",
    "details": "This calendar contains the practice schedule and game times.",
    <b>"eventFeedLink": "https://www.google.com/calendar/feeds/<i>calendarID</i>/private/full",</b>
    <b>"accessControlListLink": "https://www.google.com/calendar/feeds/<i>calendarID</i>/acl/full",</b>
    <b>"selfLink": "https://www.google.com/calendar/feeds/default/owncalendars/full/<i>calendarID</i>",</b>
    <b>"canEdit": true,</b>
    <b>"author": {
      "displayName": "Little League Schedule"
    },</b>
    <b>"accessLevel": "owner",</b>
    "color": "#2952A3",
    "hidden": false,
    "location": "Oakland",
    <b>"selected": false,</b>
    "timeZone": "America/Los_Angeles",
    <b>"timesCleaned": 0</b>
  }
}
</pre>
</section>
</div>

<p class="note"><strong>Note:</strong> If making multiple creations/updates/deletions at the same time, please consider using <a href="#Batch">Batch Request</a> as it increases performance.</p>

<h3 id="UpdatingCalendars">Updating existing calendars</h3>
<p>You can update most information about a user's calendar via the <i>owncalendars</i> feed. You can determine the edit URL by examining the calendar entry's <code>&lt;link rel='edit'&gt;</code> element or (in JSON-C) the <code>selfLink</code> URL:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;link rel=&apos;edit&apos; type=&apos;application/atom+xml&apos; href=&apos;<b>https://www.google.com/calendar/feeds/default/owncalendars/full/<i>calendarID</i></b>&apos;&gt;&lt;/link&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
"selfLink": "https://www.google.com/calendar/feeds/default/owncalendars/full/<i>calendarID</i>",
"canEdit": true,
</pre>
</section>
</div>

<p>In JSON-C, the <code>canEdit</code> field in the feed describes whether you have enough access rights to modify this calendar entry.</p>
<p>To update the calendar, send an HTTP <code>PUT</code>, using the appropriate content type, to the edit URL with the updated calendar <code>&lt;entry&gt;</code> element or <code>data</code> object in the message body.</p>
<p>The following example updates the calendar's title and color, and marks it as selected:</p>
<pre class="prettyprint">
PUT https://www.google.com/calendar/feeds/default/owncalendars/full/<i>calendarID</i>
</pre>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'
       xmlns:gCal='http://schemas.google.com/gCal/2005'
       xmlns:gd='http://schemas.google.com/g/2005'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/default/owncalendars/full/ppgcfga9qo8jmdwan231w7s8h4%40group.calendar.google.com&lt;/id&gt;
  &lt;published&gt;2007-07-12T16:46:11.815Z&lt;/published&gt;
  &lt;updated&gt;2007-07-12T16:46:11.000Z&lt;/updated&gt;
  &lt;title type='text'&gt;<b>New Title</b>&lt;/title&gt;
  &lt;summary type='text'&gt;This calendar contains the practice schedule and game times.&lt;/summary&gt;
  &lt;link rel='alternate' type='application/atom+xml' href='https://www.google.com/calendar/feeds/<i>calendarID</i>/private/full'/&gt;
  &lt;link rel='http://schemas.google.com/gCal/2005#eventFeed' type='application/atom+xml' href='https://www.google.com/calendar/feeds/<i>calendarID</i>/private/full'/&gt;
  &lt;link rel='http://schemas.google.com/acl/2007#accessControlList' type='application/atom+xml' href='https://www.google.com/calendar/feeds/<i>calendarID</i>/acl/full'/&gt;
  &lt;link rel='self' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/owncalendars/full/<i>calendarID</i>'/&gt;
  &lt;link rel='edit' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/owncalendars/full/<i>calendarID</i>'/&gt;
  &lt;author&gt;
    &lt;name&gt;Little League Schedule&lt;/name&gt;
  &lt;/author&gt;
  &lt;gCal:timezone value='America/Los_Angeles'/&gt;
  &lt;gCal:hidden value='false'/&gt;
  &lt;gCal:color value='<b>#0D7813</b>'/&gt;
  &lt;gCal:selected value='<b>true</b>'/&gt;
  &lt;gCal:accesslevel value='owner'/&gt;
  &lt;gd:where valueString='Oakland'/&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#calendar",
    "etag": "W/\"D0cGQn47eCp7IWA9WxBaGEo.\"",
    "id": "http://www.google.com/calendar/feeds/default/calendars/<i>calendarID</i>",
    "created": "2010-03-29T15:03:55.789Z",
    "updated": "2010-03-29T15:03:43.000Z",
    "title": "<b>New Title</b>",
    "details": "This calendar contains the practice schedule and game times.",
    "eventFeedLink": "https://www.google.com/calendar/feeds/<i>calendarID</i>/private/full",
    "accessControlListLink": "https://www.google.com/calendar/feeds/<i>calendarID</i>/acl/full",
    "selfLink": "https://www.google.com/calendar/feeds/default/owncalendars/full/<i>calendarID</i>",
    "canEdit": true,
    "author": {
      "displayName": "Little League Schedule"
    },
    "accessLevel": "owner",
    "color": "<b>#0D7813</b>",
    "hidden": false,
    "location": "Oakland",
    "selected": <b>true</b>,
    "timeZone": "America/Los_Angeles",
    "timesCleaned": 0
  }
}
</pre>
</section>
</div>

<p class="note"><strong>Note:</strong> If making multiple creations/updates/deletions at the same time, please consider using <a href="#Batch">Batch Request</a> as it increases performance.</p>

<h3 id="DeletingCalendars">Deleting calendars</h3>
<p>Calendars are deleted by sending a <code>DELETE</code> request to the calendar's edit URL. This is the same URL used to <a href="#UpdatingCalendars"> update the calendar</a>. For example, to delete the above calendar send the following HTTP request:</p>
<pre>DELETE /calendar/feeds/default/owncalendars/full/<i>calendarID</i></pre>
<p class="note"><strong>Note:</strong> You can't delete a user's primary calendar, i.e. the calendar with the user's email address in the ID. If you try to delete a primary calendar you will get an HTTP <code>400 Bad Request</code> error.</p>
<p class="note"><strong>Note:</strong> If making multiple creations/updates/deletions at the same time, please consider using <a href="#Batch">Batch Request</a> as it increases performance.</p>

<h2 id="ManagingSubscriptions">Managing subscriptions to calendars</h2>
<p>The <i>allcalendars</i> feed can be used to modify the list of imported calendars that a user has subscribed to. Calendars inserted via the <i>allcalendars</i> feed will be added as imported calendars.</p>

<h3 id="AddingSubscriptions">Adding new subscriptions</h3>
<p>To subscribe to an existing calendar, you first need to find the calendar's ID. The calendar ID is available on the calendar settings page, next to the Calendar Address buttons. If you're subscribing to a user's primary calendar, the id will just be the user's email address.</p>
<p>Once you have the calendar ID, create a calendar <code>&lt;entry&gt;</code> element or <code>data</code> object that contains the ID of the calendar you wish to subscribe to. For example, to subscribe to the Week Numbers calendar, you could start with the following code:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'&gt;
  &lt;id&gt;e_2_en%23weeknum%40group.v.calendar.google.com&lt;/id&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "data": {
    "id": "e_2_en%23weeknum%40group.v.calendar.google.com"
  }
}
</pre>
</section>
</div>

<p>To then subscribe to the Week Numbers calendar, send an HTTP <code>POST</code> message to the <i>allcalendars</i> feed URL with the above calendar entry in the message body (using the <code>application/atom+xml</code> or <code>application/json</code> content type, as appropriate):</p>
<pre>POST https://www.google.com/calendar/feeds/default/allcalendars/full</pre>
<p>Upon success, the server responds with an HTTP <code>201 Created</code> message that contains the calendar entry that corresponds to the calendar you subscribed to. This calendar entry is populated with data specific to the Week Numbers calendar such as the <code>title</code> and <code>details</code>, as well as elements and properties that are specific to this subscription, such as <code>color</code>, <code>hidden</code>, and <code>selected</code>. Here's an example of the Atom and JSON-C returned by the server, with personalization settings shown in bold:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'
    xmlns:app='http://www.w3.org/2007/app'
    xmlns:gCal='http://schemas.google.com/gCal/2005'
    xmlns:gd='http://schemas.google.com/g/2005'
    gd:etag='W/"Ak4HRX47eCp7IWA9Wx5REU0."'
    gd:kind='calendar#calendar'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/default/calendars/e_2_en%23weeknum%40group.v.calendar.google.com&lt;/id&gt;
  &lt;published&gt;2010-08-18T13:54:09.534Z&lt;/published&gt;
  &lt;updated&gt;2010-08-18T05:22:14.000Z&lt;/updated&gt;
  &lt;app:edited&gt;2010-08-18T05:22:14.000Z&lt;/app:edited&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/gCal/2005#calendarmeta'/&gt;
  &lt;title&gt;Week Numbers&lt;/title&gt;
  &lt;summary&gt;Week numbers displayed weekly&lt;/summary&gt;
  &lt;content type='application/atom+xml;type=feed'
    src='https://www.google.com/calendar/feeds/e_2_en%23weeknum%40group.v.calendar.google.com/private/full'/&gt;
  &lt;link rel='alternate' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/e_2_en%23weeknum%40group.v.calendar.google.com/private/full'/&gt;
  &lt;link rel='http://schemas.google.com/gCal/2005#eventFeed'
    type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/e_2_en%23weeknum%40group.v.calendar.google.com/private/full'/&gt;
  &lt;link rel='self' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/default/allcalendars/full/e_2_en%23weeknum%40group.v.calendar.google.com'/&gt;
  &lt;link rel='edit' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/default/allcalendars/full/e_2_en%23weeknum%40group.v.calendar.google.com'/&gt;
  &lt;author&gt;
    &lt;name&gt;Week Numbers&lt;/name&gt;
  &lt;/author&gt;
  &lt;gCal:accesslevel value='read'/&gt;
  <b>&lt;gCal:color value='#2952A3'/&gt;</b>
  <b>&lt;gCal:hidden value='false'/&gt;</b>
  <b>&lt;gCal:selected value='false'/&gt;</b>
  &lt;gCal:timezone value='Europe/Zurich'/&gt;
  &lt;gCal:timesCleaned value='0'/&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#calendar",
    "etag": "W/\"Ak4MRn47eCp7IWA9WxFTEEw.\"",
    "id": "http://www.google.com/calendar/feeds/default/calendars/e_2_en%23weeknum%40group.v.calendar.google.com",
    "created": "2010-03-31T12:03:30.041Z",
    "updated": "2010-03-31T07:03:07.000Z",
    "title": "Week Numbers",
    "details": "Week numbers displayed weekly",
    "eventFeedLink": "https://www.google.com/calendar/feeds/e_2_en%23weeknum%40group.v.calendar.google.com/private/full",
    "selfLink": "https://www.google.com/calendar/feeds/default/allcalendars/full/e_2_en%23weeknum%40group.v.calendar.google.com",
    "canEdit": true,
    "author": {
      "displayName": "Week Numbers"
    },
    "accessLevel": "read",
    <b>"color": "#2952A3",
    "hidden": false,
    "selected": false,</b>
    "timeZone": "Europe/Zurich",
    "timesCleaned": 0
  }
}
</pre>
</section>
</div>


<h3 id="UpdatingSubscriptions">Updating calendar subscriptions</h3>
<p>You can update the following personalization settings of a calendar using the <i>allcalendars</i> feed:</p>
<dl>
  <dt>color</dt>
  <dd>The color of the calendar in the UI.</dd>
  <dt>hidden</dt>
  <dd>Indicates whether or not the calendar is shown in the UI.</dd>
  <dt>selected</dt>
  <dd>Indicates whether or not the calendar is selected in the UI.</dd>
</dl>
<p>The personalization settings can be modified with the <i>allcalendars</i> feed even if the user doesn't own the calendar. However, the title and summary of the calendar can only be updated by an owner of the calendar using the <i>owncalendars</i> feed.</p>
<p>To update a subscription, you'll need to use the calendar entry's edit URL. You can determine the edit URL by examining the calendar entry's <code>&lt;link rel='edit'&gt;</code> element or (in JSON-C) the <code>selfLink</code> URL:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;link rel=&apos;edit&apos; type=&apos;application/atom+xml&apos; href=&apos;<b>https://www.google.com/calendar/feeds/default/allcalendars/full/<i>calendarID</i></b>&apos;&gt;&lt;/link&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
"selfLink": "https://www.google.com/calendar/feeds/default/allcalendars/full/e_2_en%23weeknum%40group.v.calendar.google.com",
</pre>
</section>
</div>

<p>Send an HTTP <code>PUT</code> to the edit URL with the updated calendar entry in the message body (using the appropriate content type). The following entry will update the color and select the calendar:</p>
<pre class="prettyprint">
PUT https://www.google.com/calendar/feeds/default/allcalendars/full/e_2_en%23weeknum%40group.v.calendar.google.com
</pre>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'
       xmlns:gCal='http://schemas.google.com/gCal/2005'
       xmlns:gd='http://schemas.google.com/g/2005'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/default/allcalendars/full/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com&lt;/id&gt;
  &lt;published&gt;2007-07-12T17:09:08.033Z&lt;/published&gt;
  &lt;updated&gt;2007-06-05T09:38:50.000Z&lt;/updated&gt;
  &lt;title type='text'&gt;Google Doodles&lt;/title&gt;
  &lt;summary type='text'&gt;&lt;/summary&gt;
  &lt;link rel='alternate' type='application/atom+xml' href='https://www.google.com/calendar/feeds/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com/private/full'/&gt;
  &lt;link rel='http://schemas.google.com/gCal/2005#eventFeed' type='application/atom+xml' href='https://www.google.com/calendar/feeds/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com/private/full'/&gt;
  &lt;link rel='self' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/allcalendars/full/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com'/&gt;
  &lt;link rel='edit' type='application/atom+xml' href='https://www.google.com/calendar/feeds/default/allcalendars/full/c4o4i7m2lbamc4k26sc2vokh5g%40group.calendar.google.com'/&gt;
  &lt;author&gt;
    &lt;name&gt;Google Doodles&lt;/name&gt;
  &lt;/author&gt;
  &lt;gCal:timezone value='Etc/GMT'/&gt;
  &lt;gCal:hidden value='false'/&gt;
  &lt;gCal:color value='<b>#A32929</b>'/&gt;
  &lt;gCal:selected value='<b>false</b>'/&gt;
  &lt;gCal:accesslevel value='read'/&gt;
  &lt;gd:where valueString=''/&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#calendar",
    "etag": "W/\"Ak4MRn47eCp7IWA9WxFTEEw.\"",
    "id": "http://www.google.com/calendar/feeds/default/calendars/e_2_en%23weeknum%40group.v.calendar.google.com",
    "created": "2010-03-31T12:03:30.041Z",
    "updated": "2010-03-31T07:03:07.000Z",
    "title": "Week Numbers",
    "details": "Week numbers displayed weekly",
    "eventFeedLink": "https://www.google.com/calendar/feeds/e_2_en%23weeknum%40group.v.calendar.google.com/private/full",
    "selfLink": "https://www.google.com/calendar/feeds/default/allcalendars/full/e_2_en%23weeknum%40group.v.calendar.google.com",
    "canEdit": true,
    "author": {
      "displayName": "Week Numbers"
    },
    "accessLevel": "read",
    "color": "<b>#A32929</b>",
    "hidden": false,
    "selected": <b>true</b>,
    "timeZone": "Europe/Zurich",
    "timesCleaned": 0
  }
}
</pre>
</section>
</div>


<h3 id="DeletingSubscriptions">Deleting subscriptions</h3>
<p>Subscriptions are deleted by sending a <code>DELETE</code> request to the calendar's edit URL. This is the same URL used to <a href="#UpdatingSubscriptions"> update the subscription</a>. For example, to delete the subscription to the Week Number calendar, send the following HTTP request:</p>
<pre class="prettyprint">DELETE /calendar/feeds/default/allcalendars/full/e_2_en%23weeknum%40group.v.calendar.google.com</pre>

<h2 id="RetrievingEvents">Retrieving events</h2>

<h3 id="RetrievingWithoutQuery">Retrieving events without query parameters</h3>
<p>The general idea of how to request a Calendar feed is that you determine the URL of the feed type you want (see <a href="reference.html#Feeds">Calendar feed types</a>), and then you send an HTTP <code>GET</code> request for that URL. Calendar then returns a Data API feed containing calendar events, each of which is an Event kind. For more information about kinds, see the <a href="/gdata/docs/2.0/elements">Kinds document</a>.</p>
<p>Google provides client libraries for interacting with many Google APIs in a variety of programming languages. You can use the client libraries to send the HTTP request and handle the returned feed; see the other tabs of this document for information on how to do this in various languages. But whether or not you use the client library, the following is what's going on at the protocol level. If you're using a UNIX system and you want to try this out without writing any code, you may find the UNIX command-line utilities <code>curl</code> or <code>wget</code> useful; for more information, see the manual pages for those utilities.</p>
<p>To get a feed, you send the following HTTP request to Calendar, using the URL you found in the previous section of this document:</p>
<pre>GET https://www.google.com/calendar/feeds/<i>userID</i>/private-<i>magicCookie</i>/full</pre>
<p>(With the appropriate values in place of <code>userID</code> and <code>magicCookie</code>, of course.)</p>
<p>(To request JSON-C format, append the <code>alt=jsonc</code> query parameter.)</p>
<p>When you send that <code>GET</code> request, Calendar may return an HTTP 302 redirect; the redirect URL has a new query parameter, <code>gsessionid</code>, appended to it. (Note that some methods of sending the <code>GET</code> request may not show you the response headers by default; if you receive a blank response, check your HTTP utility's documentation to find out how to view response headers.) That <code>gsessionid</code> parameter is the way that Calendar keeps track of your session, to improve speed of response.</p>
<p>(Some methods of sending the <code>GET</code> request may automatically follow redirects, and in some cases Calendar may not send a redirect at all; in such cases, you don't need to send the second request described below.)</p>
<p>So after you've sent the <code>GET</code> request, you have to read the HTTP headers of the response to find the URL with the session ID appended; then you need to send another <code>GET</code> request with that new URL. (Note that if you're using the UNIX command line to send requests, you may have to precede the question mark in the new URL with a backslash to keep your shell from interpreting it.)</p>
<p>In response to the second <code>GET</code> request, Calendar returns an HTTP <code>200 OK</code> status code and a feed containing all the events in your calendar. If there's only one event in your calendar, then Calendar returns something similar to the following feed. We've edited the following example a little to make it a little more readable by humans; in particular, a real Calendar feed contains actual magic-cookie values and entry IDs.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;feed xmlns='http://www.w3.org/2005/Atom'
    xmlns:gd='http://schemas.google.com/g/2005'
    gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/jo@gmail.com/private-<i>magicCookie</i>/full&lt;/id&gt;
  &lt;updated&gt;2006-03-29T07:35:59.000Z&lt;/updated&gt;
  &lt;title type='text'&gt;Jo March&lt;/title&gt;
  &lt;subtitle type='text'&gt;This is my main calendar.&lt;/subtitle&gt;
  &lt;link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/jo@gmail.com/private-<i>magicCookie</i>/full'&gt;&lt;/link&gt;
  &lt;link rel='self' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/jo@gmail.com/private-<i>magicCookie</i>/full'&gt;&lt;/link&gt;
  &lt;author&gt;
    &lt;name&gt;Jo March&lt;/name&gt;
    &lt;email&gt;jo@gmail.com&lt;/email&gt;
  &lt;/author&gt;
  &lt;generator version='1.0' uri='http://www.google.com/calendar/'&gt;CL2&lt;/generator&gt;
  &lt;gd:where valueString='California'&gt;&lt;/gd:where&gt;
  &lt;entry gd:etag='"EE4NTgBGfCp7ImA6WhVV"'&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/jo@gmail.com/private-<i>magicCookie</i>/full/<i>entryID</i>&lt;/id&gt;
    &lt;published&gt;2006-03-30T22:00:00.000Z&lt;/published&gt;
    &lt;updated&gt;2006-03-28T05:47:31.000Z&lt;/updated&gt;
    &lt;category scheme='http://schemas.google.com/g/2005#kind'
      term='http://schemas.google.com/g/2005#event'&gt;&lt;/category&gt;
    &lt;title type='text'&gt;Lunch with Darcy&lt;/title&gt;
    &lt;content type='text'&gt;Lunch to discuss future plans.&lt;/content&gt;
    &lt;link rel='alternate' type='text/html'
      href='https://www.google.com/calendar/event?eid=aTJxcnNqbW9tcTJnaTE5cnMybmEwaW04bXMgbWFyY2guam9AZ21haWwuY29t'
      title='alternate'&gt;&lt;/link&gt;
    &lt;link rel='self' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/jo@gmail.com/private-<i>magicCookie</i>/full/<i>entryID</i>'&gt;&lt;/link&gt;
    &lt;link rel='edit' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/jo@gmail.com/private-<i>magicCookie</i>/full/<i>entryID</i>'&gt;&lt;/link&gt;
    &lt;author&gt;
      &lt;name&gt;Jo March&lt;/name&gt;
      &lt;email&gt;jo@gmail.com&lt;/email&gt;
    &lt;/author&gt;
    &lt;gd:transparency
      value='http://schemas.google.com/g/2005#event.opaque'&gt;&lt;/gd:transparency&gt;
    &lt;gd:eventStatus
      value='http://schemas.google.com/g/2005#event.confirmed'&gt;&lt;/gd:eventStatus&gt;
    &lt;gd:comments&gt;
      &lt;gd:feedLink
        href='https://www.google.com/calendar/feeds/jo@gmail.com/private-<i>magicCookie</i>/full/<i>entryID</i>/comments/'&gt;&lt;/gd:feedLink&gt;
    &lt;/gd:comments&gt;
    &lt;gd:when startTime='2006-03-30T22:00:00.000Z'
      endTime='2006-03-30T23:00:00.000Z'&gt;&lt;/gd:when&gt;
    &lt;gd:where&gt;&lt;/gd:where&gt;
  &lt;/entry&gt;
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#eventFeed",
    "id": "http://www.google.com/calendar/feeds/default/private/full",
    "author": {
      "displayName": "Jo March",
      "email": "jo@gmail.com"
    },
    "title": "Jo March",
    "details": "This is my main calendar.",
    "updated": "2010-03-31T12:41:32.000Z",
    "totalResults": 3,
    "startIndex": 1,
    "itemsPerPage": 25,
    "feedLink": "https://www.google.com/calendar/feeds/default/private/full",
    "selfLink": "https://www.google.com/calendar/feeds/default/private/full?alt\u003djsonc&max-results\u003d25",
    "canPost": true,
    "timeZone": "Europe/Zurich",
    "timesCleaned": 0,
    "items": [
      {
        "kind": "calendar#event",
        "etag": "\"FUoIRQBIfCp7IWA6WhJT\"",
        "id": "52f4theojvb86bg16ek0muvnag",
        "selfLink": "https://www.google.com/calendar/feeds/default/private/full/52f4theojvb86bg16ek0muvnag",
        "alternateLink": "https://www.google.com/calendar/event?eid\u003dNTJmNHRoZW9qdmI4NmJnMTZlazBtdXZuYWcgcmF2ZW1hbitjYWxlbmRhcjVAZ29vZ2xlLmNvbQ",
        "canEdit": true,
        "title": "Lunch with Darcy",
        "created": "0001-12-31T00:00:00.000Z",
        "updated": "2010-03-31T12:41:32.000Z",
        "details": "Lunch to discuss future plans.",
        "status": "confirmed",
        "creator": {
          "displayName": "Jo March",
          "email": "jo@gmail.com"
        },
        "anyoneCanAddSelf": false,
        "guestsCanInviteOthers": true,
        "guestsCanModify": false,
        "guestsCanSeeGuests": true,
        "sequence": 0,
        "transparency": "opaque",
        "visibility": "default",
        "location": "California",
        "attendees": [
          {
            "rel": "organizer",
            "displayName": "Jo March",
            "email": "jo@gmail.com"
          }
        ],
        "when": [
          {
            "start": "2010-04-01T10:00:00.000+02:00",
            "end": "2010-04-01T11:00:00.000+02:00"
          }
        ]
      }
  }
}
</pre>
</section>
</div>

<p>For information about what each of those elements and properties means, see the <a href="/gdata/docs/2.0/reference">Google Data Protocol Reference</a> document and the <a href="reference.html#Elements">Calendar elements reference</a>. (Those documents don't explicitly cover JSON-C, but the JSON-C property names are usually the same as Atom element names.)</p>
<p>If your request fails for some reason, Calendar may return a different status code; for information about the status codes, see the <a href="/gdata/docs/2.0/reference">Google Data Protocol Reference</a> document.</p>
<p class="note"><strong>Note</strong>: By default, the events in a feed are ordered by their <code>updated</code> values, with the most recently updated event appearing first in the feed. For information on changing the ordering, see <a href="reference.html#Parameters">Calendar query parameters reference</a>.</p>

<h3 id="RetrievingCached">Retrieving an event again</h3>
<p>If you want to retrieve an event that you've retrieved before, you can improve efficiency by telling Calendar to send the event only if it has changed since the last time you retrieved it.</p>
<p>To do this sort of conditional retrieval, send an HTTP <code>GET</code> request that includes an HTTP <code>If-None-Match</code> header. In the header, specify the entry's ETag, which you can find in the <code>&lt;entry&gt;</code> element's <code>gd:etag</code> attribute, or (in JSON-C) in the <code>etag</code> property.</p>
<p>For example:</p>
<pre>
If-None-Match: "EE4NTgBGfCp7ImA6WhVV"
</pre>
<p>When Calendar receives this request, it checks to see whether the event that you requested has the same ETag as the ETag you specified. If the ETags match, then the event hasn't changed, and Calendar returns either an HTTP 304 <code>Not Modified</code> status code or an HTTP 412 <code>Precondition Failed</code> status code. Both of those status codes indicate that the event you've already retrieved is up-to-date.</p>
<p>If the ETags don't match, then the event has been modified since the last time you requested it, and Calendar returns the event.</p>
<p>For more information about ETags, see the <a href="/gdata/docs/2.0/reference#ResourceVersioning">Google Data Protocol reference guide</a>.</p>

<h3 id="RetrievingDateRange">Retrieving events for a specified date range</h3>
<p>The Calendar Data API lets you request a set of entries that match specified criteria. In addition to the standard Data API query parameters, Calendar provides two additional query parameters, <code>start-min</code> and <code>start-max</code>, to let you request all events that fall within or overlap a range of dates. For more information, see <a href="reference.html#Parameters">Calendar query parameters reference</a>.</p>
<p>It's a good idea to limit your queries to a range of dates if you're not limiting them in any other way, just to avoid retrieving all entries ever posted to the calendar.</p>
<p>Here's how to create and send a date-range query at the protocol level:</p>
<p>First, authenticate the user, if you haven't already done so. See the previous example for information on how to do that.</p>
<p>Then send an HTTP request like the following to Calendar, using the special "default" URL:</p>
<pre>GET https://www.google.com/calendar/feeds/default/private/full?start-min=2006-03-16T00:00:00&amp;start-max=2006-03-24T23:59:59</pre>
<p>(To request JSON-C format, append the <code>alt=jsonc</code> query parameter.)</p>
<p>Be sure to include the Authorization header in the request, as described in the previous example.</p>
<p>When you send that <code>GET</code> request, Calendar may return an HTTP 302 redirect with a <code>gsessionid</code> appended to it, just like in the earlier examples. In that case, read the HTTP headers of the response to find the URL with the session ID appended; then send another <code>GET</code> request with that new URL. (This second <code>GET</code> request also needs to have the Authorization header set.)</p>
<p>In response to the second <code>GET</code> request (or the first one if there was no redirect), Calendar returns an HTTP <code>200 OK</code> status code and a feed containing any event that overlaps the minimum and maximum start times you specified.</p>

<h3 id="RetrievingWithQuery">Retrieving events matching a full text query</h3>
<p>Google Calendar supports full-text queries that search the title and content of an event. To perform a full-text query send an HTTP request using the 'q' parameter in the URL.</p>
<pre>GET https://www.google.com/calendar/feeds/default/private/full?q=Tennis</pre>
<p>(To request JSON-C format, append the <code>alt=jsonc</code> query parameter.)</p>
<p>To query using standard Data API query parameters, just change the URL to use other parameters.</p>
<p class="note"><strong>Note</strong>: Google Calendar doesn't support Data API category queries.</p>

<h2 id="CreatingEvents">Creating events</h2>
<p>The Calendar Data API allows you to create two types of events: single-occurrence events and recurring events, which are set up to repeat on a predetermined schedule.</p>

<h3 id="CreatingSingle">Creating single-occurrence events</h3>
<p>Adding an event to a calendar is a little bit more complicated than getting a feed, because you need to create the Atom or JSON-C code representing the event, and you need to use authentication.</p>
<p>First, create an entry of the Event kind. (For more information about kinds, see the <a href="/gdata/docs/2.0/elements">Kinds document</a>.) For example, you might create the following entry:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'
    xmlns:gd='http://schemas.google.com/g/2005'&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/g/2005#event'&gt;&lt;/category&gt;
  &lt;title type='text'&gt;Tennis with Beth&lt;/title&gt;
  &lt;content type='text'&gt;Meet for a quick lesson.&lt;/content&gt;
  &lt;gd:transparency
    value='http://schemas.google.com/g/2005#event.opaque'&gt;
  &lt;/gd:transparency&gt;
  &lt;gd:eventStatus
    value='http://schemas.google.com/g/2005#event.confirmed'&gt;
  &lt;/gd:eventStatus&gt;
  &lt;gd:where valueString='Rolling Lawn Courts'&gt;&lt;/gd:where&gt;
  &lt;gd:when startTime='2006-04-17T15:00:00.000Z'
    endTime='2006-04-17T17:00:00.000Z'&gt;&lt;/gd:when&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "data": {
    "title": "Tennis with Beth",
    "details": "Meet for a quick lesson.",
    "transparency": "opaque",
    "status": "confirmed",
    "location": "Rolling Lawn Courts",
    "when": [
      {
        "start": "2010-04-17T15:00:00.000Z",
        "end": "2010-04-17T17:00:00.000Z"
      }
    ]
  }
}
</pre>
</section>
</div>

<p>Note that this entry does not contain the standard <code>author</code> element or property. The server will insert author information based on the user that submits the request (i.e. the user whose authentication token accompanies the request).</p>
<p>To post an entry, send the following HTTP request to Calendar, using a special "default" URL (and an Authorization header; see the <a href="#Auth">section on authentication</a> above). Calendar automatically redirects the default URL to the URL of the read/write private feed of the calendar belonging to the authenticated user. (Note that you don't have to use the default URL to send a <code>POST</code> request to Calendar; you can specify the user ID instead of "default" if you prefer. For more information, see the <a href="reference.html#Feeds">Calendar feed types</a> reference.)</p>
<pre>POST https://www.google.com/calendar/feeds/default/private/full</pre>
<p>The content that you send with the <code>POST</code> request should be the entry you created above, using the appropriate content type.</p>
<p>Just like in the previous example, Calendar may return an HTTP 302 redirect; if so, then the redirect URL has a new parameter, <code>gsessionid</code>, appended to it. If you received the redirect, then send the same <code>POST</code> request again, with the same Authorization header and the same content, but with the <code>gsessionid</code> parameter appended. The response may also include a <code>S</code> cookie, which you should store and send this cookie with future requests <a href="http://www.ietf.org/rfc/rfc2109.txt">as appropriate</a>. For more information on handling sessions with the Calendar Data API, see the <a href="/google-apps/calendar/faq.html#redirect_handling">knowledge base</a>. Please note: if a session ID indicated in a cookie header conflicts with the session ID passed as a gsessionid URL parameter, you will get caught in a redirect loop.</p>
<p>When you send that second <code>POST</code> request (or the first one in cases where there's no redirect), Calendar creates a calendar event, then returns an HTTP <code>201 CREATED</code> status code, along with a copy of the new event in the form of an <code>&lt;entry&gt;</code> element or (in JSON-C) <code>data</code> object. The returned entry is similar to the one you sent, but the returned one contains data added by Calendar, such as an <code>id</code> element or property.</p>
<p>If your request fails for some reason, Calendar may return a different status code; for information about the status codes, see the <a href="/gdata/docs/2.0/reference">Google Data Protocol Reference</a> document.</p>
<p>Note that if you use the Data API to add an event to your calendar that involves multiple participants, the event appears on the other people's calendars just as it would if you added it by hand using the Calendar GUI.</p>
<p class="note"><strong>Note:</strong> If making multiple creations/updates/deletions at the same time, please consider using <a href="#Batch">Batch Request</a> as it increases performance.</p>

<h3 id="CreatingQuickAdd">Creating quick add events</h3>
<p>To create an event using Google Calendar's <a href="http://www.google.com/support/calendar/bin/answer.py?answer=36604">quick add</a> feature, set the event entry's content to the quick add string you'd like to use. Then add a <code>quickAdd</code> element or property with its value set to <code>true</code>. For example, the following event entry will create an event on April 11 from 3pm-3:30pm with a title of 'Tennis with John':</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom' xmlns:gCal='http://schemas.google.com/gCal/2005'&gt;
  &lt;content type="html"&gt;Tennis with John April 11 3pm-3:30pm&lt;/content&gt;
  &lt;gCal:quickadd value="true"/&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "data": {
    "details": "Tennis with John April 11 3pm-3:30pm",
    "quickAdd": true
  }
}
</pre>
</section>
</div>

<p>The response from the server will contain an event entry with the appropriate fields populated by the server. Note that some elements and properties are now empty or absent:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns="http://www.w3.org/2005/Atom" xmlns:gd="http://schemas.google.com/g/2005">
  ...
  &lt;title type="text">Tennis with John&lt;/title&gt;
  &lt;content type="text" /&gt;
  &lt;gd:when endTime="2007-04-11T15:30:00.000-07:00" startTime="2007-04-11T15:00:00.000-07:00" /&gt;
  ...
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    ...
    "title": "Tennis with John",
    "details": "",
    "when": [
      {
        "start": "2010-04-11T15:00:00.000+02:00",
        "end": "2010-04-11T15:30:00.000+02:00"
      }
    ]
    ...
  }
}
</pre>
</section>
</div>

<p class="note"><strong>Note:</strong> If making multiple creations/updates/deletions at the same time, please consider using <a href="#Batch">Batch Request</a> as it increases performance.</p>

<h3 id="CreatingGadgets">Creating Calendar Event Gadgets</h3>
<p>You can also create Gadgets as events in Google Calendar. Calendar Event Gadgets, formerly called web content, can contain images, HTML pages, or gadgets.</p>
<p>To create a simple Calendar Event Gadget that displays an image, first create a calendar event entry that contains a <code>webContent</code> element or object. (In Atom, that element appears inside a <code>&lt;link rel='http://schemas.google.com/gCal/2005/webContent'&gt;</code> element.)</p>
<p>For example, the following entry would create a Calendar Event Gadget that displays the <a href="https://www.google.com/logos/worldcup06.gif">World Cup doodle</a> (dimensions 276x120, and located at <code>https://www.google.com/logos/worldcup06.gif</code>). The icon at <code>https://www.google.com/calendar/images/google-holiday.gif</code> will be used to display the Calendar Event Gadget in the Calendar user interface before it is clicked.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns="http://www.w3.org/2005/Atom" xmlns:gCal="http://schemas.google.com/gCal/2005" &gt;
  &lt;link rel="http://schemas.google.com/gCal/2005/webContent"
        href="https://www.google.com/calendar/images/google-holiday.gif"
        title="World Cup"
        type="image/gif"&gt;
    &lt;gCal:webContent url="https://www.google.com/logos/worldcup06.gif" width="276" height="120" /&gt;
  &lt;/link&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "data": {
    "webContent": {
        "icon": "https://www.google.com/calendar/images/google-holiday.gif",
        "title": "World Cup",
        "type": "image/gif",
        "url": "https://www.google.com/logos/worldcup06.gif",
        "width": 276,
        "height": 120
    }
  }
}
</pre>
</section>
</div>

<p>To create a Calendar Event Gadget that displays a gadget, create an event entry with a web content link again, but this time the type should be <code>application/x-google-gadgets+xml</code>. You'll also need to get the gadget's URL from the <a href="http://www.google.com/ig/directory">iGoogle Directory</a>. This example configures a Calendar Event Gadget to display the DateTime gadget and specifies the appropriate user preferences.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns="http://www.w3.org/2005/Atom" xmlns:gCal="http://schemas.google.com/gCal/2005" &gt;
  &lt;link rel="http://schemas.google.com/gCal/2005/webContent"
        href="https://www.google.com/favicon.ico"
        title="DateTime Gadget (a classic!)"
        type="application/x-google-gadgets+xml"&gt;
    &lt;gCal:webContent url="https://www.google.com/ig/modules/datetime.xml" width="300" height="136"&gt;
      &lt;gCal:webContentGadgetPref name="color" value="green" /&gt;
    &lt;/gCal:webContent&gt;
  &lt;/link&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "data": {
    "webContent": {
        "icon": "https://www.google.com/favicon.ico",
        "title": "DateTime Gadget (a classic!)",
        "type": "application/x-google-gadgets+xml",
        "url": "https://www.google.com/ig/modules/datetime/xml",
        "width": 300,
        "height": 136
    }
  }
}
</pre>
</section>
</div>

<p>Once you've created the Gadget's event, insert it just like a normal event by sending an HTTP <code>POST</code> to the event feed URL with the event in the message body (using the appropriate content type).</p>
<pre>POST https://www.google.com/calendar/feeds/default/private/full</pre>
<p>For more information on Calendar Event Gadgets, see the <a href="/google-apps/calendar/calendar_gadgets.html">Calendar Event Gadgets Reference Guide</a>.</p>
<p class="note"><strong>Note:</strong> If making multiple creations/updates/deletions at the same time, please consider using <a href="#Batch">Batch Request</a> as it increases performance.</p>

<h3 id="CreatingRecurring">Creating recurring events</h3>
<p>Creating recurring events is very similar to creating a single-occurrence event. The event is created as an Atom element or JSON-C object of the <a href="/gdata/docs/2.0/elements#gdEventKind">Event kind</a>, but includes a <a href="/gdata/docs/2.0/elements#gdRecurrence"><code>recurrence</code></a> instead of a <code>when</code> element or property. A <a href="/gdata/docs/2.0/elements#gdRecurrence"><code>recurrence</code></a> contains syntax for recurring events based upon the <a href="http://www.ietf.org/rfc/rfc2445.txt">iCalendar</a> standard (RFC 2445).</p>
<p>Here's an example of an all-day recurring event that occurs weekly on Tuesdays from May 5th, 2010 through September 4th, 2010:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'
    xmlns:gd='http://schemas.google.com/g/2005'&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/g/2005#event'&gt;&lt;/category&gt;
  &lt;title type='text'&gt;Tuesday Tennis Lessons with Jane&lt;/title&gt;
  &lt;content type='text'&gt;Meet on Tuesdays for a quick lesson.&lt;/content&gt;
  &lt;gd:transparency
    value='http://schemas.google.com/g/2005#event.opaque'&gt;
  &lt;/gd:transparency&gt;
  &lt;gd:eventStatus
    value='http://schemas.google.com/g/2005#event.confirmed'&gt;
  &lt;/gd:eventStatus&gt;
  &lt;gd:where valueString='Rolling Lawn Courts'&gt;&lt;/gd:where&gt;
  &lt;gd:recurrence&gt;DTSTART;VALUE=DATE:20100505
DTEND;VALUE=DATE:20100506
RRULE:FREQ=WEEKLY;BYDAY=Tu;UNTIL=20100904
&lt;/gd:recurrence&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "data": {
    "title": "Tuesday Tennis Lessons with Jane",
    "details": "Meet on Tuesdays for a quick lesson.",
    "transparency": "opaque",
    "status": "confirmed",
    "location": "Rolling Lawn Courts",
    "recurrence": "DTSTART;VALUE=DATE:20100505\r\nDTEND;VALUE=DATE:20100506\r\nRRULE:FREQ=WEEKLY;BYDAY=Tu;UNTIL=20100904\r\n"
  }
}
</pre>
</section>
</div>

<p>As per <a href="http://www.ietf.org/rfc/rfc2445.txt">RFC 2445</a>, each line of the recurrence syntax ends in a carriage return and a line feed (CRLF). As the event is an all-day event, it does not include a reference to a timezone. If you do include a recurring event which references a timezone, you don't need to include the <code>VTIMEZONE</code> definition if the timezone used is a standard Java timezone definition.</p>
<p>This entry can then be sent via a <code>POST</code> to the Calendar servers using the method described in the <a href="#CreatingSingle">Creating single-occurrence events</a> section.</p>
<p>Retrieving recurring events using the Calendar Data API can be done via several methods, using the query parameters defined in the <a href="reference.html#Parameters">Reference Guide</a>. Here's a basic overview:</p>
<ul>
  <li><b>No query parameters:</b> a recurring event is returned as a single element or object, with a <code>recurrence</code> child element or property. No <code>when</code> elements or properties are included in the recurring event.</li>
  <li><b><code>start-min</code> and/or <code>start-max</code> specified:</b> a recurring event is represented as a single element or object, with multiple <code>when</code> elements or objects for each occurrence in the range specified. A <code>recurrence</code> is also included.</li>
  <li><b><code>singleevents=true</code>:</b> recurring events are represented in the same format as single events, with a single element or object per occurrence of the event. Each event includes a single <code>when</code> element or object, but does not include the <code>recurrence</code> syntax. It does, however, include an <a href="/gdata/docs/2.0/elements#gdOriginalEvent"><code>originalEvent</code></a> element or property.</li>
</ul>
<p class="note"><strong>Note:</strong> If making multiple creations/updates/deletions at the same time, please consider using <a href="#Batch">Batch Request</a> as it increases performance.</p>

<h2 id="UpdatingEvents">Updating events</h2>
<p>To update an existing event, first you retrieve the event you want to update, then you modify it as desired, and then you send a <code>PUT</code> request, with the updated event in the message body, to the event's edit URL.</p>
<p>To make sure that your update doesn't overwrite another client's changes, include an HTTP <code>If-Match</code> header that contains the original event's ETag value. You can determine the original event's ETag value by examining the <code>&lt;entry&gt;</code> element's or <code>data</code> object's <code>etag</code> attribute.</p>
<p>If you want to update the event regardless of whether someone else has updated it since you retrieved it, then use <code>If-Match: *</code> and don't include the ETag.</p>
<p>For more information about ETags, see the <a href="/gdata/docs/2.0/reference#ResourceVersioning">Google Data Protocol reference guide</a>.</p>
<p>Be sure that the <code>id</code> value in the entry you <code>PUT</code> exactly matches the <code>id</code> of the existing entry. The edit URL is highlighted in the following event entry:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'
       xmlns:gd='http://schemas.google.com/g/2005'
       xmlns:gCal='http://schemas.google.com/gCal/2005'
       gd:etag='FkkOQgZGeip7ImA6WhVR'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/jo@gmail.com/private/full/<i>entryID</i>&lt;/id&gt;
  &lt;published&gt;2006-03-30T22:00:00.000Z&lt;/published&gt;
  &lt;updated&gt;2006-03-28T05:47:31.000Z&lt;/updated&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/g/2005#event'&gt;&lt;/category&gt;
  &lt;title type='text'&gt;Lunch with Darcy&lt;/title&gt;
  &lt;content type='text'&gt;<b>Change of plans - Let's discuss the new proposal.</b>&lt;/content&gt;
  &lt;link rel='alternate' type='text/html'
    href='https://www.google.com/calendar/event?eid=aTJxcnNqbW9tcTJnaTE5cnMybmEwaW04bXMgbWFyY2guam9AZ21haWwuY29t'
    title='alternate'&gt;&lt;/link&gt;
  &lt;link rel='self' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/jo@gmail.com/private/full/<i>entryID</i>' /&gt;
  &lt;link rel='edit' type='application/atom+xml'
    href='<b>https://www.google.com/calendar/feeds/jo@gmail.com/private/full/<i>entryID</i></b>' /&gt;
  ...
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#event",
    "etag": "\"FkkOQgZGeip7ImA6WhVR\"",
    "id": "<i>entryID</i>",
    <b>"selfLink": "https://www.google.com/calendar/feeds/default/private/full/<i>entryID</i>",</b>
    "alternateLink": "https://www.google.com/calendar/event?eid=aTJxcnNqbW9tcTJnaTE5cnMybmEwaW04bXMgbWFyY2guam9AZ21haWwuY29t",
    "canEdit": true,
    "title": "Lunch with Darcy",
    "created": "2010-03-31T12:41:32.000Z",
    "updated": "2010-03-31T12:41:32.000Z",
    "details": "<b>Change of plans - Let's discuss the new proposal.</b>",
    ...
  }
}
</pre>
</section>
</div>

<p class="note"><strong>IMPORTANT</strong>: To ensure forward compatibility, be sure that when you <code>PUT</code> an updated entry you preserve <b>all</b> the Atom or JSON-C that was present when you retrieved the entry from Google Calendar. Otherwise, when we implement new stuff and include <code>new-awesome-feature</code> elements or properties in the feed, your client won't return them and your users will miss out. The <a href="/gdata/docs/client-libraries">Google Data Protocol client libraries</a> all handle this correctly, so if you're using one of the libraries you're all set.</p>
<p class="note"><strong>Note:</strong> If making multiple creations/updates/deletions at the same time, please consider using <a href="#Batch">Batch Request</a> as it increases performance.</p>

<h2 id="DeletingEvents">Deleting events</h2>
<p>To delete an event, first you retrieve the event you want to delete, then you send a <code>DELETE</code> request to the event's edit URL. This is the same URL used to <a href="#UpdatingEvents">update the event</a>.</p>
<p>If you want to make sure that you don't delete an event that has been changed by another client since you retrieved it, include an HTTP <code>If-Match</code> header that contains the original event's ETag value. You can determine the original event's ETag value by examining the event's <code>etag</code>.</p>
<p>If you want to delete the event regardless of whether someone else has updated it since you retrieved it, then use <code>If-Match: *</code> and don't include the ETag. (In this case, you don't need to retrieve the event before deleting it.)</p>
<p>For more information about ETags, see the <a href="/gdata/docs/2.0/reference#ResourceVersioning">Google Data Protocol reference guide</a>.</p>
<p class="note"><strong>Note:</strong> If making multiple creations/updates/deletions at the same time, please consider using <a href="#Batch">Batch Request</a> as it increases performance.</p>

<h2 id="SharingACalendar">Sharing calendars</h2>
<p>This section describes how to retrieve and modify Google Calendar access control lists (ACLs) using the raw protocol. An access control list identifies the set of users with whom a given calendar is shared, and the level of access for each user (such as read-only access, full access, and so on).</p>
<p>Specifically, an ACL is a list of access rules. Each access rule specifies a "scope" (a person or set of people) and then associates a "role" (an access level) with that scope. Those terms are defined as follows: </p>
<ul>
  <li>The <i>scope</i> of a rule directly or indirectly identifies a set of individuals to whom the  rule applies. A scope has two parts: a  type (such as <code>user</code>) and a value (such as an email address).</li>
  <li>A <i>role</i> defines an access level, which determines what rights people identified by the given scope have. In Google Calendar, the defined roles include <code>none</code>, <code>freebusy</code>, <code>read</code>, and <code>owner</code>. (Note that in Atom, most role names must be preceded by a specific namespace URI; see the examples and reference document for details.) A given scope can have only one role.</li>
</ul>
<p>For information about the other defined scopes and roles, see the <a href="reference.html#gacl_reference">GAcl namespace element reference</a> in the Calendar reference document.</p>
<p class="note"><strong>Note</strong>: For a given scope, having a role of <code>none</code> is equivalent to having no role defined.</p>
<p>The ACL for each calendar is available as a Data API feed. Each entry in the feed defines a single access rule.</p>
<p>Google Calendar does not support query parameters on requests for ACL feeds.</p>

<h3 id="RetrieveAcl">Retrieving access control lists</h3>
<p>To retrieve a calendar's ACL feed, you send an authenticated <code>GET</code> to the feed's URI. Only someone with <code>owner</code> access to a calendar can view that calendar's ACL feed. </p>
<p>You can determine the URI of a calendar's ACL feed by looking at the calendar's entry in one of the calendar feeds (see <a href="#RetrievingCalendars">Retrieving Calendars</a>). The ACL feed URI is given in the <code>&lt;link rel="http://schemas.google.com/acl/2007#accessControlList"&gt;</code> element, or (in JSON-C) the <code>accessControlListLink</code> property.</p>
<p>For example, the following partial entry from a metafeed includes the URI of the ACL feed for a particular calendar.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry gd:etag='W/"C0ABSH4-eip7ImA9WxRVGUo."'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/liz%40gmail.com/liz%40gmail.com&lt;/id&gt;
  &lt;published&gt;2007-04-24T01:40:29.752Z&lt;/published&gt;
  &lt;updated&gt;2007-04-21T00:52:04.000Z&lt;/updated&gt;
  &lt;title type='text'&gt;My Calendar&lt;/title&gt;
  ...
  &lt;link rel='http://schemas.google.com/acl/2007#accessControlList'
    type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full'&gt;
  &lt;/link&gt;
  ...
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "kind": "calendar#calendar",
  ...
  "title": "My Primary Calendar",
  ...
  <b>"accessControlListLink": "https://www.google.com/calendar/feeds/user%40gmail.com/acl/full",</b>
  ...
}
</pre>
</section>
</div>

<p>If you send a <code>GET</code> to that ACL feed URI, you might receive a feed like the following.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;feed xmlns='http://www.w3.org/2005/Atom'
    xmlns:openSearch='http://a9.com/-/spec/opensearch/1.1/'
    xmlns:gAcl='http://schemas.google.com/acl/2007'
    xmlns:gd='http://schemas.google.com/g/2005'
    gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/liz%40gmail.com/acl/full&lt;/id&gt;
  &lt;updated&gt;2007-04-21T00:52:04.000Z&lt;/updated&gt;
  &lt;title type='text'&gt;Elizabeth Bennet's access control list&lt;/title&gt;
  &lt;link rel='https://schemas.google.com/acl/2007#controlledObject'
    type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/liz%40gmail.com/private/full'&gt;
  &lt;/link&gt;
  &lt;link rel='http://schemas.google.com/g/2005#feed'
    type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full'&gt;
  &lt;/link&gt;
  &lt;link rel='http://schemas.google.com/g/2005#post'
    type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full'&gt;
  &lt;/link&gt;
  &lt;link rel='self' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full'&gt;
  &lt;/link&gt;
  &lt;generator version='1.0'
    uri='http://www.google.com/calendar'&gt;Google Calendar&lt;/generator&gt;
  &lt;openSearch:totalResults&gt;2&lt;/openSearch:totalResults&gt;
  &lt;openSearch:startIndex&gt;1&lt;/openSearch:startIndex&gt;
  &lt;entry gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."'&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Aliz%40gmail.com&lt;/id&gt;
    &lt;updated&gt;2007-04-21T00:52:04.000Z&lt;/updated&gt;
    &lt;category scheme='http://schemas.google.com/g/2005#kind'
      term='http://schemas.google.com/acl/2007#accessRule'&gt;<br />    &lt;/category&gt;
    &lt;title type='text'&gt;owner&lt;/title&gt;
    &lt;content type='text'&gt;&lt;/content&gt;
    &lt;link rel='self' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Aliz%40gmail.com'&gt;
    &lt;/link&gt;
    &lt;link rel='edit' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Aliz%40gmail.com'&gt;
    &lt;/link&gt;
    &lt;author&gt;<br />      &lt;name&gt;Elizabeth Bennet&lt;/name&gt;<br />      &lt;email&gt;liz@gmail.com&lt;/email&gt;<br />    &lt;/author&gt;
    &lt;gAcl:scope type='user' value='liz@gmail.com'&gt;&lt;/gAcl:scope&gt;
    &lt;gAcl:role value='<code>http://schemas.google.com/gCal/2005#</code>owner'&gt;
    &lt;/gAcl:role&gt;
  &lt;/entry&gt;
  &lt;entry gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."'&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/default&lt;/id&gt;
    &lt;updated&gt;2007-04-21T00:52:04.000Z&lt;/updated&gt;
    &lt;category scheme='http://schemas.google.com/g/2005#kind'
      term='http://schemas.google.com/acl/2007#accessRule'&gt;
    &lt;/category&gt;
    &lt;title type='text'&gt;read&lt;/title&gt;
    &lt;content type='text'&gt;&lt;/content&gt;
    &lt;link rel='self' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/default'&gt;
    &lt;/link&gt;
    &lt;link rel='edit' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/default'&gt;
    &lt;/link&gt;
    &lt;author&gt;<br />      &lt;name&gt;Elizabeth Bennet&lt;/name&gt;<br />      &lt;email&gt;liz@gmail.com&lt;/email&gt;<br />    &lt;/author&gt;
    &lt;gAcl:scope type='default'&gt;&lt;/gAcl:scope&gt;
    &lt;gAcl:role value='http://schemas.google.com/gCal/2005#read'&gt;
    &lt;/gAcl:role&gt;
  &lt;/entry&gt;
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#aclFeed",
    "etag": "W/\"Ak8CRn47eCp7IWA9WxFTEEk.\"",
    "id": "http://www.google.com/calendar/feeds/liz%40gmail.com/acl/full",
    "controlledObjectLink": "https://www.google.com/calendar/feeds/liz%40gmail.com/private/full",
    "feedLink": "https://www.google.com/calendar/feeds/default/acl/full",
    "selfLink": "https://www.google.com/calendar/feeds/default/acl/full?alt\u003djsonc",
    "canPost": true,
    "items": [
      {
        "kind": "calendar#acl",
        "etag": "W/\"Ak8CRn47eCp7IWA9WxFTEEk.\"",
        "id": "http://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Aliz%40gmail.com",
        "selfLink": "https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Aliz%40gmail.com",
        "canEdit": true,
        "role": "owner",
        "scopeType": "user",
        "scope": "liz@gmail.com"
      },
      {
        "kind": "calendar#acl",
        "etag": "W/\"Ak8CRn47eCp7IWA9WxFTEEk.\"",
        "id": "http://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/default",
        "selfLink": "https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/default",
        "canEdit": true,
        "role": "read",
        "scopeType": "default",
        "scope": ""
      }
    ]
  }
}
</pre>
</section>
</div>

<p>A few comments on that feed:</p>
<ul>
  <li>The <code>&lt;link rel='http://schemas.google.com/acl/2007#controlledObject'&gt;</code> element, or (in JSON-C) the <code>controlledObjectLink</code> property, contains the URI of the calendar feed for the calendar that this ACL belongs to.</li>
  <li>In Atom, each rule/entry contains a <code>&lt;category scheme='http://schemas.google.com/g/2005#kind'&gt;</code> element, with <code>term='http://schemas.google.com/acl/2007#accessRule'.</code></li>
  <li>In Atom, the ACL-specific elements use the namespace alias <code>gAcl</code>.</li>
  <li>The first entry defines a role (<code>owner</code>) for a specific user (<code>liz@gmail.com</code>). </li>
  <li>The second entry defines a role (<code>read</code>) for all other users (<code>default</code>). </li>
</ul>

<h3 id="View_Rule">Retrieving a rule</h3>
<p>To retrieve a single ACL rule rather than the entire feed, you can construct the URI for a single rule using the scope type (such as <code>user</code>) and the scope value (such as the user's email address).</p>
<p>To construct the URI for a particular rule, start with the ACL feed URI; then add the scope type and value (URL-encoded as needed), separated by a colon, as an additional path element. For example, the following is the URI for the ACL rule (for the example calendar we've been using) for user darcy@gmail.com:</p>
<pre>https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Adarcy%40gmail.com</pre>
<p>(To request JSON-C format, append the <code>alt=jsonc</code> query parameter.)</p>
<p>If you request a rule that hasn't been defined, then the service returns an HTTP <code>404 NOT FOUND</code> status code.</p>

<h3 id="AddAcl">Adding a user to an access control list</h3>
<p>A requester with permission to modify the access control list can add a new ACL rule by posting a new entry to the ACL feed's <code>POST</code> URI. The entry should contain the following elements or properties:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<ul>
  <li><code>&lt;category&gt;</code></li>
  <li><code>&lt;gAcl:scope&gt;</code></li>
  <li><code>&lt;gAcl:role&gt;</code></li>
</ul>
</section>
<section>
  <h3>JSON-C</h3>
<ul>
  <li><code>scope</code></li>
  <li><code>scopeType</code></li>
  <li><code>role</code></li>
</ul>
</section>
</div>

<p>Any other elements or properties that appear in the entry you send are ignored by the server.</p>
<p class="note"><strong>Note</strong>: Another way to add a rule is to use <code>PUT</code>. For more information, see <a href="#UpdateAcl">Updating a user's role in an ACL</a>.</p>
<p>For example, you could send a <code>POST</code> request to the following URI, after authenticating as user <code>liz@gmail.com</code>:</p>
<pre>POST /calendar/feeds/liz@gmail.com/acl/full</pre>
<p>With the following entry in the body of the <code>POST</code> (using the appropriate content type):</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom' xmlns:gAcl='http://schemas.google.com/acl/2007'&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/acl/2007#accessRule'/&gt;
  &lt;gAcl:scope type='user' value='darcy@gmail.com'&gt;&lt;/gAcl:scope&gt;
  &lt;gAcl:role
    value='http://schemas.google.com/gCal/2005#editor'&gt;
  &lt;/gAcl:role&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "data": {
    "scope": "darcy@gmail.com",
    "scopeType": "user",
    "role": "editor"
  }
}
</pre>
</section>
</div>

<p>If the specified scope does not already have a role defined (or, equivalently, if the role for that scope is currently <code>none</code>), then Calendar creates a new ACL rule, and returns the corresponding ACL entry in the response. The returned entry includes several new elements or properties provided by the server.</p>
<p>If there is already a rule in the access control list with a scope whose type and value match that in the request, and whose role is anything other than <code>none</code>, then the <code>POST</code> operation fails with error code <code>409 Conflict</code>.</p>
<p>The above <code>POST</code> might receive the following successful result: </p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
201 Created

&lt;entry xmlns='http://www.w3.org/2005/Atom' xmlns:gAcl='http://schemas.google.com/acl/2007'
    xmlns:gd='http://schemas.google.com/g/2005'
    gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Adarcy%40gmail.com&lt;/id&gt;
  &lt;updated&gt;2007-04-15T22:03:57.000Z&lt;/updated&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/acl/2007#accessRule'&gt;
  &lt;/category&gt;
  &lt;title type='text'&gt;editor&lt;/title&gt;
  &lt;content type='text'&gt;&lt;/content&gt;
  &lt;link rel='self' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Adarcy%40gmail.com'&gt;
  &lt;/link&gt;
  &lt;link rel='edit' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Adarcy%40gmail.com'&gt;
  &lt;/link&gt;
  &lt;author&gt;
    &lt;name&gt;Elizabeth Bennet&lt;/name&gt;
    &lt;email&gt;liz@gmail.com&lt;/email&gt;
  &lt;/author&gt;
  &lt;gAcl:scope type='user' value='darcy@gmail.com'&gt;&lt;/gAcl:scope&gt;
  &lt;gAcl:role value='http://schemas.google.com/gCal/2005#editor'&gt;
  &lt;/gAcl:role&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
201 Created

{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#acl",
    "etag": "W/\"CE8FSXc9cCp7IWA9WxFTEEg.\"",
    "id": "http://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Adarcy%40gmail.com",
    "selfLink": "https://www.google.com/calendar/feeds/liz%40gmail.com/acl/full/user%3Adarcy%40gmail.com",
    "canEdit": true,
    "role": "editor",
    "scopeType": "user",
    "scope": "darcy@gmail.com"
  }
}
</pre>
</section>
</div>


<h3 id="UpdateAcl">Updating a user's role in an ACL</h3>
<p>To change an ACL rule, you can send a <code>PUT</code> request to the edit URI of the entry you want to modify. (You can also use this approach as an alternate method of creating new rules.)</p>
<p>You can construct the edit URI for a Google Calendar ACL rule entry using the entry's scope type and scope value, without having to retrieve the entry first.</p>
<p>For example, to change the ACL rule for user <code>darcy@gmail.com</code>, you could send the following <code>PUT</code> request (using the appropriate content type):</p>
<pre>PUT /calendar/feeds/liz@gmail.com/acl/full/user%3Adarcy%40gmail.com</pre>
<p>With the following entry in the request body:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom' xmlns:gAcl='http://schemas.google.com/acl/2007'
    xmlns:gd='http://schemas.google.com/g/2005'
    gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."'&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/acl/2007#accessRule'/&gt;
  &lt;gAcl:scope type='user' value='darcy@gmail.com'&gt;&lt;/gAcl:scope&gt;
  &lt;gAcl:role value='<code>http://schemas.google.com/gCal/2005#</code>read'&gt;&lt;/gAcl:role&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "data": {
    "etag": "W/\"CE8FSXc9cCp7IWA9WxFTEEg.\"",
    "role": "read",
    "scopeType": "user",
    "scope": "darcy@gmail.com"
  }
}
</pre>
</section>
</div>

<p> The URI fragment following <code>/full/</code> in the <code>PUT</code> URI must indicate the same scope type and value as the elements or properties in the entry you're sending.</p>
<p>The server silently overwrites any previous access level set for the indicated scope. If there is no existing rule for that scope, it will create a new one.</p>
<p class="note"><strong>Note</strong>: Because a given rule is associated with a particular scope, it is not possible to modify the scope of a rule when updating it; only the role can be modified. An attempt to modify the scope will result in a <code>403 Forbidden</code> error.</p>

<h3 id="DeleteAcl">Removing a user from an access control list</h3>
<p>To remove a specific access rule for a calendar, you may do either of the following:</p>
<ul>
  <li>Send an HTTP <code>DELETE</code> request to the appropriate ACL entry's edit URI.</li>
  <li> Update the entry (with <code>PUT</code>) and set <code>role</code> to <code>none</code>.</li>
</ul>
<p>Doing either of those things causes the user (or group of users) specified in the scope to lose access to the calendar. </p>

<h2 id="FreeBusy">Querying busy times <span class="exp-feat">(Experimental)</span></h2>

<p>If the only needed information is the freebusy time for one or more calendars, the API provides the functionality to get that without the overhead of requesting all calendar data. Using <a href="#BatchFreeBusy">batch requests</a>, this can be done for several users in one single HTTP request.</p>
<p>For Google Apps for Business domains, freebusy information for group members can also be retrieved more efficiently than querying each Calendar separately.</p>
<p>The freebusy feeds are read-only and contain entries with a list of blocks of busy-times, a busy-time being a time taken by a non-transparent event that has not been declined in the user's calendar.</p>

<h3 id="UserFreeBusy">Retrieving a user's busy times</h3>

<p>To get a user's busy times feed, you send the following HTTP request to
Calendar:</p>

<pre>GET https://www.google.com/calendar/feeds/default/freebusy/busy-times/<i>userID</i></pre>

<p>(With the appropriate value in place of <code>userID</code> of
  course.)</p>

<p>The result is a read-only feed containing the user's blocks of
  busy-times</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns="http://www.w3.org/2005/Atom" xmlns:gCal="http://schemas.google.com/gCal/2005"
 xmlns:gd="http://schemas.google.com/g/2005"
 <b>gd:kind='calendar#freebusy'</b> &gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/default/freebusy/busy-times/liz%40example.com&lt;/id&gt;
  &lt;updated&gt;2010-03-13T00:00:00.000Z&lt;/udpated&gt;
  &lt;link rel='self'
  href='https://www.google.com/calendar/feeds/default/freebusy/busy-times/liz%40example.com' /&gt;
  &lt;author&gt;
    &lt;name&gt;liz@example.com&lt;/name&gt;
    &lt;email&gt;liz@example.com&lt;/email&gt;
  &lt;/author&gt;
  &lt;gCal:timeRange&gt;
    &lt;gd:when startTime='2010-03-13T00:00:00Z' endTime='2010-03-14T00:00:00Z'/&gt;
  &lt;gCal:timeRange&gt;
  <b>&lt;gCal:busy&gt;
    &lt;gd:when startTime='2010-03-13T14:00Z' endTime='2010-03-13T14:30Z'/&gt;
  &lt;/gCal:busy&gt;
  &lt;gCal:busy&gt;
    &lt;gd:when startTime='2010-03-13T16:00Z' endTime='2010-03-13T16:30Z'/&gt;
  &lt;/gCal:busy&gt;</b>
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
Freebusy requests aren't available in JSON-C format.
</pre>
</section>
</div>

<p class="note"><strong>Note:</strong> The default time range is 24 hours from the time of the request. For information on specifying a date range, see <a href="#RetrievingDateRange">Retrieving events for a specified date range</a>.</p>

<p>This previous request is equivalent to sending a <code>GET</code> request to
  this URL:</p>

<pre>https://www.google.com/calendar/feeds/default/freebusy/busy-times/<i>userID</i>?<b>start-min=2010-03-13T00:00:00Z&amp;start-max=2010-03-14T00:00:00Z</b></pre>

<h3 id="GroupFreeBusy">Retrieving group members' busy information</h3>

<p class="note"><strong>Note</strong>: This API is only available for
  Google Apps for Business domains.</p>

<p>You can also retrieve the busy information for the members of a group by
sending the following HTTP request to Calendar:</p>

<pre>GET https://www.google.com/calendar/feeds/default/freebusy/group/<i>groupID</i>/busy-times</pre>

<p>(With the appropriate value in place of <code>groupID</code> of course.)</p>

<p>This request will return a feed containing an entry per group
  member's busy block of times. You can use the <code>max-results</code> query parameter to limit the number of entries returned by the API and use the <code>next</code> link to paginate throught the result.</p>

<p class="note"><strong>Note</strong>: The default value
  for <code>max-results</code> is 25.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;feed xmlns="http://www.w3.org/2005/Atom"
  xmlns:gCal="http://schemas.google.com/gCal/2005"
  xmlns:openSearch="http://a9.com/-/spec/opensearch/1.1/"
  xmlns:gd="http://schemas.google.com/g/2005"
  <b>gd:kind="calendar#groupFreebusyFeed"</b>&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/default/freebusy/group/group%40example.com/busy-times&lt;/id&gt;
  &lt;updated&gt;2010-03-13T00:00:00.000Z&lt;/updated&gt;
  &lt;category scheme="http://schemas.google.com/g/2005#kind"
    term="http://schemas.google.com/gCal/2005#freebusy"/&gt;
  &lt;link rel="http://schemas.google.com/g/2005#feed"
    type="application/atom+xml"
    href="https://www.google.com/calendar/feeds/default/freebusy/group/group%40example.com/busy-times"/&gt;
  &lt;link rel="self" type="application/atom+xml"
    href="https://www.google.com/calendar/feeds/default/freebusy/group/group%40example.com/busy-times?max-results=25"/&gt;
  <b>&lt;link rel="next" type="application/atom+xml"
    href="https://www.google.com/calendar/feeds/default/freebusy/group/group%40example.com/busy-times?start-token=c2VtYmFAZ29vZ2xlLmNvbQ&amp;max-results=25"/&gt;</b>
  &lt;generator version="1.0" uri="http://www.google.com/calendar"&gt;Google Calendar&lt;/generator&gt;
  <b>&lt;openSearch:totalResults&gt;33&lt;/openSearch:totalResults&gt;</b>
  &lt;entry gd:kind="calendar#groupFreebusy"&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/freebusy/busy-times/liz%40example.com&lt;/id&gt;
    &lt;updated&gt;2010-03-13T00:00:00.000Z&lt;/updated&gt;
    <b>&lt;category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/gCal/2005#freebusy"/&gt;</b>
    &lt;link rel="self" type="application/atom+xml"
      href="https://www.google.com/calendar/feeds/default/freebusy/group/group%40example.com/busy-times/liz%40example.com"/&gt;
    &lt;author&gt;
      &lt;name&gt;Elizabeth Bennet&lt;/name&gt;
      &lt;email&gt;liz@example.com&lt;/email&gt;
    &lt;/author&gt;
    &lt;gCal:timeRange&gt;
      &lt;gd:when startTime='2010-03-13T00:00:00Z' endTime='2010-03-14T00:00:00Z'/&gt;
    &lt;gCal:timeRange&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T14:00Z' endTime='2010-03-13T14:30Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T16:00Z' endTime='2010-03-13T16:30Z'/&gt;
    &lt;/gCal:busy&gt;
  &lt;/entry&gt;
  &lt;entry gd:kind="calendar#groupFreebusy"&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/freebusy/busy-times/john%40example.com&lt;/id&gt;
    &lt;updated&gt;2010-03-13T00:00:00.000Z&lt;/updated&gt;
    <b>&lt;category scheme="http://schemas.google.com/g/2005#kind" term="http://schemas.google.com/gCal/2005#freebusy"/&gt;</b>
    &lt;link rel="self" type="application/atom+xml"
    href="https://www.google.com/calendar/feeds/default/freebusy/group/group%40example.com/busy-times/john%40example.com"/&gt;
    &lt;author&gt;
      &lt;name&gt;John Doe&lt;/name&gt;
      &lt;email&gt;john@example.com&lt;/email&gt;
    &lt;/author&gt;
    &lt;gCal:timeRange&gt;
      &lt;gd:when startTime='2010-03-13T00:00:00Z' endTime='2010-03-14T00:00:00Z'/&gt;
    &lt;gCal:timeRange&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T09:00Z' endTime='2010-03-13T11:30Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T13:00Z' endTime='2010-03-13T13:30Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T15:00Z' endTime='2010-03-13T16:15Z'/&gt;
    &lt;/gCal:busy&gt;
  &lt;/entry&gt;
  ...
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
Freebusy requests aren't available in JSON-C format.
</pre>
</section>
</div>

<p class="note"><strong>Note:</strong> A single group with more than 100 members cannot be queried for freebusy</a>.</p>
<p class="note"><strong>Note:</strong> Only 50 freebusy entries can be returned per request, please use <code>max-results</code> query parameter to limit the number of returned entries.</p>

<h3 id="BatchFreeBusy">Retrieving multiple user's busy times using a batch request.</h3>

<p>Busy times queries can be optimized by doing requests for multiple users at the same time by using <a href="#Batch">batch requests</a></p>

<p>To do so, first create an XML representation of the busy times requests you want to send, which might look like that:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint">
&lt;feed xmlns="http://www.w3.org/2005/Atom"
  xmlns:gd="http://schemas.google.com/g/2005"
  xmlns:batch='http://schemas.google.com/gdata/batch'&gt;
  &lt;batch:operation type='query'/&gt;
  &lt;entry&gt;
    &lt;batch:id&gt;lizFreeBusy&lt;/batch:id&gt;
    <b>&lt;id&gt;https://www.google.com/calendar/feeds/default/freebusy/busy-times/liz%40example.com&lt;/id&gt;</b>
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;batch:id&gt;johnFreeBusy&lt;/batch:id&gt;
    <b>&lt;id&gt;https://www.google.com/calendar/feeds/default/freebusy/busy-times/john%40example.com&lt;/id&gt;</b>
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;batch:id&gt;aliceFreeBusy&lt;/batch:id&gt;
    <b>&lt;id&gt;https://www.google.com/calendar/feeds/default/freebusy/busy-times/alice%40example.com&lt;/id&gt;</b>
  &lt;/entry&gt;
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
Freebusy requests aren't available in JSON-C format.
</pre>
</section>
</div>

<p>Then send a <code>POST</code> request to the freebusy batch URL:</p>
<pre>https://www.google.com/calendar/feeds/default/freebusy/busy-times/batch</pre>

<p>After submitting the batch request, the server will respond with a feed that contains the status of each request. You can parse this response to see if each operation was successful or not.</p>
<p>This is an example of what the server might return:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint">
&lt;feed xmlns="http://www.w3.org/2005/Atom"
      xmlns:gd="http://schemas.google.com/g/2005"
      gd:kind="calendar#freebusyFeed"&gt;
  &lt;id&gt;https://www.google.com/calendar/feeds/default/freebusy/batch/<i>ID</i>&lt;/id&gt;
  &lt;updated&gt;2010-03-13T00:00:00.000Z&lt;/updated&gt;
  &lt;category scheme="http://schemas.google.com/g/2005#kind"
      term="http://schemas.google.com/gCal/2005#freebusy"/&gt;
  &lt;title&gt;Batch Feed&lt;/title&gt;
  <b>&lt;entry xmlns:batch="http://schemas.google.com/gdata/batch"
         xmlns:gCal="http://schemas.google.com/gCal/2005"
         gd:kind="calendar#freebusy"&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/freebusy/liz%40example.com&lt;/id&gt;
    &lt;updated&gt;2010-03-13T00:00:00.000Z&lt;/updated&gt;
    &lt;category scheme="http://schemas.google.com/g/2005#kind"
      term="http://schemas.google.com/gCal/2005#freebusy"/&gt;
    &lt;link rel="self" type="application/atom+xml"
      href="https://www.google.com/calendar/feeds/default/freebusy/busy-times/liz%40example.com"/&gt;
    &lt;author&gt;
      &lt;name&gt;liz@example.com&lt;/name&gt;
      &lt;email&gt;liz@example.com&lt;/email&gt;
    &lt;/author&gt;
    &lt;batch:id&gt;lizFreeBusy&lt;/batch:id&gt;
    &lt;batch:operation type="query"/&gt;
    &lt;batch:status code="200" reason="Success"/&gt;
    &lt;gCal:timeRange&gt;
      &lt;gd:when startTime='2010-03-13T00:00:00Z'
      endTime='2010-03-14T00:00:00Z'/&gt;
    &lt;gCal:timeRange&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T14:00Z'
      endTime='2010-03-13T14:30Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T16:00Z'
      endTime='2010-03-13T16:30Z'/&gt;
    &lt;/gCal:busy&gt;
  &lt;/entry&gt;
  &lt;entry xmlns:batch="http://schemas.google.com/gdata/batch"
         xmlns:gCal="http://schemas.google.com/gCal/2005"
         gd:kind="calendar#freebusy"&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/freebusy/john%40example.com&lt;/id&gt;
    &lt;updated&gt;2010-03-13T00:00:00.000Z&lt;/updated&gt;
    &lt;category scheme="http://schemas.google.com/g/2005#kind"
      term="http://schemas.google.com/gCal/2005#freebusy"/&gt;
    &lt;link rel="self" type="application/atom+xml"
      href="https://www.google.com/calendar/feeds/default/freebusy/busy-times/john%40example.com"/&gt;
    &lt;author&gt;
      &lt;name&gt;john@example.com&lt;/name&gt;
      &lt;email&gt;john@example.com&lt;/email&gt;
    &lt;/author&gt;
    &lt;batch:id&gt;johnFreeBusy&lt;/batch:id&gt;
    &lt;batch:operation type="query"/&gt;
    &lt;batch:status code="200" reason="Success"/&gt;
    &lt;gCal:timeRange&gt;
      &lt;gd:when startTime='2010-03-13T00:00:00Z'
      endTime='2010-03-14T00:00:00Z'/&gt;
    &lt;gCal:timeRange&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T09:00Z'
      endTime='2010-03-13T11:30Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T13:00Z'
      endTime='2010-03-13T13:30Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T15:00Z'
      endTime='2010-03-13T16:15Z'/&gt;
    &lt;/gCal:busy&gt;
  &lt;/entry&gt;
  &lt;entry xmlns:batch="http://schemas.google.com/gdata/batch"
         xmlns:gCal="http://schemas.google.com/gCal/2005"
         gd:kind="calendar#freebusy"&gt;
    &lt;id&gt;http://www.google.com/calendar/feeds/default/freebusy/alice%40example.com&lt;/id&gt;
    &lt;updated&gt;2010-03-13T00:00:00.000Z&lt;/updated&gt;
    &lt;category scheme="http://schemas.google.com/g/2005#kind"
      term="http://schemas.google.com/gCal/2005#freebusy"/&gt;
    &lt;link rel="self" type="application/atom+xml"
      href="https://www.google.com/calendar/feeds/default/freebusy/busy-times/alice%40example.com"/&gt;
    &lt;author&gt;
      &lt;name&gt;alice@example.com&lt;/name&gt;
      &lt;email&gt;alice@example.com&lt;/email&gt;
    &lt;/author&gt;
    &lt;batch:id&gt;aliceFreeBusy&lt;/batch:id&gt;
    &lt;batch:operation type="query"/&gt;
    &lt;batch:status code="200" reason="Success"/&gt;
    &lt;gCal:timeRange&gt;
      &lt;gd:when startTime='2010-03-13T00:00:00Z'
      endTime='2010-03-14T00:00:00Z'/&gt;
    &lt;gCal:timeRange&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T09:00Z'
      endTime='2010-03-13T10:00Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T11:00Z'
      endTime='2010-03-13T11:30Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T12:00Z'
      endTime='2010-03-13T14:00Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T15:00Z'
      endTime='2010-03-13T15:15Z'/&gt;
    &lt;/gCal:busy&gt;
    &lt;gCal:busy&gt;
      &lt;gd:when startTime='2010-03-13T16:00Z'
      endTime='2010-03-13T16:30Z'/&gt;
    &lt;/gCal:busy&gt;
  &lt;/entry&gt;</b>
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
Freebusy requests aren't available in JSON-C format.
</pre>
</section>
</div>

<p class="note"><strong>Note:</strong> The default time range is 24 hours from the time of the request. For information on specifying a date range, see <a href="#RetrievingDateRange">Retrieving events for a specified date range</a>.</p>

<p>This previous request is equivalent to sending a <code>POST</code> request to
  this URL:</p>

<pre>https://www.google.com/calendar/feeds/default/freebusy/busy-times/batch?<b>start-min=2010-03-13T00:00:00Z&amp;start-max=2010-03-14T00:00:00Z</b></pre>

<p class="note"><strong>Note:</strong> See <a href="#Batch">Batch request</a> for more information.</p>

<p class="note"><Strong>Note:</strong> Google Apps for Business
  domains can add group members' busy-times query to a batch
  request:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint">
&lt;feed xmlns="http://www.w3.org/2005/Atom"
  xmlns:gd="http://schemas.google.com/g/2005"
  xmlns:batch='http://schemas.google.com/gdata/batch'&gt;
  &lt;batch:operation type='query'/&gt;
  &lt;entry&gt;
    &lt;batch:id&gt;groupFreeBusy&lt;/batch:id&gt;
    &lt;id&gt;https://www.google.com/calendar/feeds/default/freebusy/busy-times/<b>group%40example.com</b>&lt;/id&gt;
  &lt;/entry&gt;
  ...
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
Freebusy requests aren't available in JSON-C format.
</pre>
</section>
</div>

<p>Such a request will return an embedded feed for this batch ID such
  as the result of a <a href="#GroupFreeBusy">single group members'
  busy-times query</a>.</p>

<h2 id="AdditionalOps">Additional operations</h2>

<h3 id="ExtendedProps">Extended properties</h3>
<p>You can add extended properties (arbitrary name-value pairs) to Calendar events. These can be used to store application-specific IDs or other small amounts of information your application needs when interacting with a Google Calendar. The name of a property can contain up to 47 characters, and the value can contain up to 1024 characters. Extended properties are only accessible through the API &ndash; they do not appear in the Calendar user interface.</p>
<p>To include extended properties in your events, add the <code>&lt;extendedProperty&gt;</code> element or (in JSON-C) the <code>extendedProperties</code> property, like this:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns="http://www.w3.org/2005/Atom" xmlns:gd="http://schemas.google.com/g/2005"
  gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."' &gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/jo@gmail.com/events/<i>entryID</i>&lt;/id&gt;
  &lt;published&gt;2006-03-30T22:00:00.000Z&lt;/published&gt;
  &lt;updated&gt;2006-03-28T05:47:31.000Z&lt;/updated&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/g/2005#event'&gt;&lt;/category&gt;
  &lt;title type='text'&gt;Lunch with Darcy&lt;/title&gt;
  &lt;content type='text'&gt;Lunch to discuss future plans.&lt;/content&gt;
  &lt;link rel='alternate' type='text/html'
    href='https://www.google.com/calendar/event?eid=aTJxcnNqbW9tcTJnaTE5cnMybmEwaW04bXMgbWFyY2guam9AZ21haWwuY29t'
    title='alternate'&gt;&lt;/link&gt;
  &lt;link rel='self' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/jo@gmail.com/private/full/<i>entryID</i>'&gt;&lt;/link&gt;
  &lt;link rel='edit' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/jo@gmail.com/private/full/<i>entryID</i>' /&gt;
  <b>&lt;gd:extendedProperty name="propname" value="propvalue" /&gt;</b>
  ...
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#event",
    "etag": "\"FUoJTgVHdyp7IWA6WhJT\"",
    "id": "8jsb0f2e9lpo6am4cf2plo9brg",
    "selfLink": "https://www.google.com/calendar/feeds/default/private/full/8jsb0f2e9lpo6am4cf2plo9brg",
    "alternateLink": "https://www.google.com/calendar/event?eid\u003dOGpzYjBmMmU5bHBvNmFtNGNmMnBsbzlicmcgcmF2ZW1hbitjYWxlbmRhcjVAZ29vZ2xlLmNvbQ",
    "canEdit": true,
    "title": "Tennis with Beth",
    ...
<b>  "extendedProperties": [
      {
        "name": "name1",
        "value": "value1"
      },
      {
        "name": "name2",
        "value": "value2"
      }
    ]</b>
  }
}
</pre>
</section>
</div>

<p class="note"><strong>Note:</strong> Extended properties are not indexed so you can't query based on their keys or values.</p>

<h3 id="Reminders">Reminders and notifications</h3>
<p>To include reminders in your events, add the <code>reminders</code> element or property as a child of the <code>when</code> element, like this:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns="http://www.w3.org/2005/Atom" xmlns:gd="http://schemas.google.com/g/2005"
  gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."' &gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/jo@gmail.com/events/<i>entryID</i>&lt;/id&gt;
  &lt;published&gt;2006-03-30T22:00:00.000Z&lt;/published&gt;
  &lt;updated&gt;2006-03-28T05:47:31.000Z&lt;/updated&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/g/2005#event'&gt;&lt;/category&gt;
  &lt;title type='text'&gt;Lunch with Darcy&lt;/title&gt;
  &lt;content type='text'&gt;Lunch to discuss future plans.&lt;/content&gt;
  &lt;link rel='alternate' type='text/html'
    href='https://www.google.com/calendar/event?eid=aTJxcnNqbW9tcTJnaTE5cnMybmEwaW04bXMgbWFyY2guam9AZ21haWwuY29t'
    title='alternate'&gt;&lt;/link&gt;
  &lt;link rel='self' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/jo@gmail.com/private/full/<i>entryID</i>'&gt;&lt;/link&gt;
  &lt;link rel='edit' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/jo@gmail.com/private/full/<i>entryID</i>' /&gt;
  &lt;gd:when startTime='2006-03-30T22:00:00.000Z' endTime='2006-03-30T23:00:00.000Z'&gt;
    <b>&lt;gd:reminder minutes='30' method='email' /&gt;</b>
    <b>&lt;gd:reminder minutes='10' method='alert' /&gt;</b>
  &lt;/gd:when&gt;  ...
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#event",
    "etag": "\"FUoORgREdip7IWA6WhJT\"",
    "id": "52f4theojvb86bg16ek0muvnag",
    "selfLink": "https://www.google.com/calendar/feeds/default/private/full/52f4theojvb86bg16ek0muvnag",
    "alternateLink": "https://www.google.com/calendar/event?eid\u003dNTJmNHRoZW9qdmI4NmJnMTZlazBtdXZuYWcgcmF2ZW1hbitjYWxlbmRhcjVAZ29vZ2xlLmNvbQ",
    "canEdit": true,
    "title": "Lunch with Darcy",
    "created": "0001-12-31T00:00:00.000Z",
    "updated": "2010-03-31T17:50:58.000Z",
    "details": "Lunch to discuss future plans. 2",
    ...
    "when": [
      {
        "start": "2010-04-01T10:00:00.000+02:00",
        "end": "2010-04-01T11:00:00.000+02:00",
<b>    "reminders": [
          {
            "minutes": 10,
            "method": "alert"
          },
          {
            "minutes": 30,
            "method": "email"
          }
        ]</b>
      }
    ]
  }
}
</pre>
</section>
</div>

<p>You can include up to five reminders per event. The available methods are <code>email</code>, <code>alert</code> (a popup in the browser), <code>sms</code> (a text message), or <code>none</code>.</p>
<p>By default every event created through the Google Calendar interface is associated with a SMS reminder, even if SMS notifications are not enabled in your Google Calendar account setting.</p>
<p>In Atom, for an event to inherit the default reminder setting of your Google Calendar account, you can either add an empty reminder element with no <code>method</code> value (<code>&lt;gd:reminder /&gt;</code>) or add a <code>&lt;gd:reminder method='all' /&gt;</code> element.</p>
<p>In Atom, if you want to ensure that no reminders are sent, add a <code>&lt;gd:reminder method='none' /&gt;</code> element.</p>
<p class="note"><strong>Note:</strong> The value of <code>minutes</code> can be any arbitrary number of minutes from 5 minutes to 4 weeks.</p>

<h3 id="Comments">Comments</h3>
<p>An attendee of an event used to be able to add a note, also known as a comment, to their reply.</p>
<p>However, the comment feature has been removed from the Google Calendar GUI, and the Data API comment feeds are now deprecated. Calendar still supplies a comment feed when requested, for backward compatibility, but that feed no longer provides useful information.</p>
<p>Because comments are deprecated and no longer useful, this developer's guide no longer provides information on how to request a comment feed.</p>

<h3 id="GeoRSS">GeoRSS data (<a href="/google-apps/calendar/changelog.html#release-2011-03">Deprecated</a>)</h3>
<p class="warning"><strong>Important</strong>: This feature has been deprecated. While the server might still geocode the location, client applications should no longer rely on this feature.</p>

<p>If an event has any location information (see the <a href="/gdata/docs/2.0/elements#gdWhere"><code>gd:where</code></a> element), the Calendar server geocodes the event's location as a latitude and longitude and includes this information into the event entry as a <code>georss:where</code> element (Atom) or <code>geoLocation</code> property (JSON-C):</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;entry xmlns='http://www.w3.org/2005/Atom'
    <b>xmlns:gml='http://www.opengis.net/gml'</b>
    <b>xmlns:georss='http://www.georss.org/georss'</b>
    xmlns:gd='http://schemas.google.com/g/2005'
    gd:etag='W/"DU4ERH47eCp7ImA9WxRVEkQ."' &gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/jo@gmail.com/events/<i>entryID</i>&lt;/id&gt;
  &lt;published&gt;2006-03-30T22:00:00.000Z&lt;/published&gt;
  &lt;updated&gt;2006-03-28T05:47:31.000Z&lt;/updated&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind'
    term='http://schemas.google.com/g/2005#event'&gt;&lt;/category&gt;
  &lt;title type='text'&gt;Lunch with Darcy&lt;/title&gt;
  &lt;content type='text'&gt;Lunch to discuss future plans.&lt;/content&gt;
  &lt;link rel='alternate' type='text/html'
    href='https://www.google.com/calendar/event?eid=aTJxcnNqbW9tcTJnaTE5cnMybmEwaW04bXMgbWFyY2guam9AZ21haWwuY29t'
    title='alternate'&gt;&lt;/link&gt;
  &lt;link rel='self' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/jo@gmail.com/private/full/<i>entryID</i>'&gt;&lt;/link&gt;
  &lt;link rel='edit' type='application/atom+xml'
    href='https://www.google.com/calendar/feeds/jo@gmail.com/private/full/<i>entryID</i>' /&gt;
  &lt;gd:where valueString='Saint Petersburg' /&gt;
  <b>&lt;georss:where&gt;
    &lt;gml:Point&gt;
      &lt;gml:pos&gt;59.939039 30.315785&lt;/gml:pos&gt;
    &lt;/gml:Point&gt;
  &lt;/georss:where&gt;</b>
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre class="prettyprint lang-js">
{
  "apiVersion": "2.3",
  "data": {
    "kind": "calendar#event",
    "etag": "\"FUoORwVFfSp7IWA6WhJT\"",
    "id": "52f4theojvb86bg16ek0muvnag",
    "selfLink": "https://www.google.com/calendar/feeds/default/private/full/52f4theojvb86bg16ek0muvnag",
    "alternateLink": "https://www.google.com/calendar/event?eid\u003dNTJmNHRoZW9qdmI4NmJnMTZlazBtdXZuYWcgcmF2ZW1hbitjYWxlbmRhcjVAZ29vZ2xlLmNvbQ",
    "canEdit": true,
    "title": "Lunch with Darcy",
    "updated": "2010-03-31T17:35:43.000Z",
    ...
    "location": "Saint Petersburg",
    <b>"geoLocation": "59.939039 30.315785",</b>
    ...
  }
}
</pre>
</section>
</div>

<p>The location is optional in the event feed and read-only. It is not guaranteed that GeoRSS information will be present in every event entry, even if the event location is set.</p>
<p>If the location is present, it contains latitute/longtitude data. For more information about the GeoRSS format, see <a href="http://georss.org">http://georss.org</a>.</p>

<h2 id="ImprovingPerformance">Improving performance</h2>
<p>Some special features are available to help you optimize your Calendar Data API requests.</p>

<h3 id="PartialResponse">Requesting a partial response <span class="exp-feat">(Experimental)</span></h3>
<p>If there are many items in a feed, the Atom or JSON-C that is returned by the server can be quite long. With the Calendar Data API, you can ask for only the feed or entry information you need at the given point in your application. By requesting a <i>partial response</i>, you can significantly reduce the overhead of transferring and parsing unneeded data.</p>
<p>To request a partial response, use the <code>fields</code> query parameter, as shown in the following example.</p>
<p>The Atom and JSON-C formats have different field names, so the <code>fields</code> values are different.</p>
<p class="note"><strong>Note:</strong> As with all query parameter values, the <code>fields</code> parameter value must be URL encoded. For better readability, the example below omits the encoding.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre>
GET /calendar/feeds/default/private/full?fields=entry(@gd:*,title,gd:when)
GData-Version: 2
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
  Partial response in JSON-C format is coming soon.
</pre>
</section>
</div>

<p>This returns a partial representation that contains only the requested information for each entry. For example, the above Atom example returns all the <code>gd</code> namespace attributes (including <code>gd:etag</code>), the title, and time periods for all events, as shown below.</p>
<p>If your application is only displaying times and titles (or some other limited subset of event data), you can use a request like this to fetch only the data you need, eliminating a large amount of unneeded data from the response.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;feed xmlns='http://www.w3.org/2005/Atom'
    xmlns:gd='http://schemas.google.com/g/2005'&gt;
  &lt;entry gd:etag='&quot;FE8LQQJJeSp7IWA6WhVa&quot;'
      gd:kind='calendar#event'
      gd:fields='@gd:*,title,gd:when'&gt;
    &lt;title&gt;Meet Elizabeth for lunch&lt;/title&gt;
    &lt;gd:when endTime='2010-02-22T12:30:00.000-08:00'
        startTime='2010-02-22T11:00:00.000-08:00'&gt;
      &lt;gd:reminder method='alert' minutes='10' /&gt;
      &lt;gd:reminder method='sms' minutes='10' /&gt;
    &lt;/gd:when&gt;
  &lt;/entry&gt;
  <i>...More entries here...</i>
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
  Partial response in JSON-C format is coming soon.
</pre>
</section>
</div>

<p>You can use partial response with any Calendar request that returns data, including <code>GET</code>, <code>POST</code>, and <code>PUT</code>, as well as <code>PATCH</code>, which is used for making <a href="#PartialUpdate">partial update</a> requests.</p>
<p class="note"><b>Note:</b> If you want to use the result of a partial response as the basis of a subsequent <code>PATCH</code> request, it can be useful to include the ETag and edit link information in the results: <code>fields='@gd:*,entry(@gd:*,link[@rel=&quot;edit&quot;](@href),...)</code></p>
<p>For more information, see <a href="/gdata/docs/2.0/reference#PartialResponse">Partial response</a> in the protocol reference document.</p>

<h3 id="PartialUpdate">Making a partial update <span class="exp-feat">(Experimental)</span></h3>
<p>You can also use a partial representation when modifying an entry. With <i>partial update</i>, you send only the changes, rather than a modified version of the full resource representation. This lets your client application be more efficient when making updates.</p>
<p>Instead of using <code>PUT</code>, however, you must use <code>PATCH</code> when requesting a partial update. You send the <code>PATCH</code> request to the same edit URI that you normally use with <code>PUT</code>. The data you send is a partial entry that represents the changes you want to make to the target resource.</p>
<p>When the server processes a <code>PATCH</code> request, it first checks to see if the partial entry includes a <code>gd:fields</code> attribute. If it does, everything specified by the <code>gd:fields</code> value is first removed from the target resource. Then each field provided in the body of the partial entry is merged:</p>
<ul>
  <li>If the field can only exist once in the target entry then, on merging, the field in the partial representation overwrites the corresponding field in the target entry.</li>
  <li>If the field can exist more than once in the target entry then, on merging, the field is added to the target entry.</li>
</ul>
<p>For more information on <code>PATCH</code> semantics, see <a href="/gdata/docs/2.0/reference#PartialUpdate">Partial update</a> in the protocol reference document.</p>
<p>The following example deletes a specific attendee from the event:</p>
<pre class="prettyprint">
PATCH /calendar/feeds/default/private/full/<i>eventID</i>
Content-Type: application/xml
GData-Version: 2
If-Match: &quot;FE8LQQJJeSp7IWA6WhVa&quot;
</pre>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;?xml version='1.0' encoding='UTF-8'?>
&lt;entry xmlns='http://www.w3.org/2005/Atom'
    xmlns:gd='http://schemas.google.com/g/2005'
    gd:fields='gd:who[@email=&quot;liz@gmail.com&quot;]'&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
  Partial update in JSON-C format is coming soon.
</pre>
</section>
</div>

<p>The partial entry representation provided has a <code>gd:fields</code> attribute of <code>'gd:who[@email=&quot;liz@gmail.com&quot;]'</code> or a <code>fields</code> property of <code>attendees[email='liz@gmail.com']</code>, so that email address is first removed from the target resource. Since there is no data provided in the request body, the effect is that the attendee with email address <code>'liz@gmail.com'</code> is deleted from the event.</p>
<p>When a user responds to an event, you can use a partial update to change the attendee status, as shown in the following example:
<pre class="prettyprint">
PATCH /calendar/feeds/default/private/full/<i>eventID</i>
Content-Type: application/xml
GData-Version: 2
If-Match: &quot;FE8LQQJJeSp7IWA6WhVa&quot;
</pre>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;entry xmlns='http://www.w3.org/2005/Atom'
    xmlns:gd='http://schemas.google.com/g/2005'
    gd:fields='gd:who[@email=&quot;will@gmail.com&quot;]'&gt;
  &lt;gd:who email='will@gmail.com'&gt;
    &lt;gd:attendeeStatus value='http://schemas.google.com/g/2005#event.accepted'/&gt;
  &lt;/gd:who&gt;
&lt;/entry&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
 Partial update in JSON-C format is coming soon.
</pre>
</section>
</div>

<p>First, the existing data for the attendee with email address <code>'will@gmail.com'</code> is removed from the event. Then the new data provided for the same attendee is merged. The new data indicates that the attendee accepted the event. In effect, the new <code>&lt;gd:who&gt;</code> element or attendee object replaces the one specified by the <code>fields</code> attribute or property.</p>
<p>Note that in this case, it was important to remove the existing data for the attendee first. Since the <code>&lt;gd:who&gt;</code> element or attendee object can exist more than once in the target entry, the merging process would have added it as another attendee with the same email address. Only by removing the existing data first can you replace a particular instance of a repeating item with a new value.</p>
<p>After processing a valid <code>PATCH</code> request, the server returns an HTTP <code>200</code> status code, along with a copy of the full representation of the updated calendar event.</p>
<p>If you prefer to have the server return only certain parts of an entry, you can use the <code>fields</code> query parameter with <code>PATCH</code> to request a <a href="#PartialResponse">partial response</a>.</p>

<h3 id="Batch">Performing multiple operations with a batch request</h3>
<p>If you're performing a lot of operations, the time it takes to send and receive all those HTTP messages can really add up, making your app slow and unresponsive. With batch requests you can have the server perform multiple operations with a single HTTP request. The basic idea is that you create a calendar event feed and add an entry for each operation you want to perform. The following snippet shows a batch request that contains four operations, one each for creating, querying, updating, and deleting an event, but you can use any combination of operations that you want. Most of the unnecessary elements have been omitted.</p>
<p class="note"><strong>Note</strong>: Batch requests are available only in Atom format, not JSON-C.</p>
<p class="note"><b>Note:</b> In Atom, in addition to the usual namespace declarations, you also need to add the <code>xmlns:batch</code> namespace, as shown below.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;feed xmlns='http://www.w3.org/2005/Atom'
      xmlns:app='http://www.w3.org/2007/app'
      <b>xmlns:batch='http://schemas.google.com/gdata/batch'</b>
      xmlns:gCal='http://schemas.google.com/gCal/2005'
      xmlns:gd='http://schemas.google.com/g/2005'&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/g/2005#event' /&gt;
  &lt;entry&gt;
    <b>&lt;batch:id&gt;Insert itemA&lt;/batch:id&gt;
    &lt;batch:operation type='insert' /&gt;</b>
    &lt;category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/g/2005#event' /&gt;
    &lt;title type='text'&gt;Event inserted via batch&lt;/title&gt;
    ... <i>additional fields for new entry</i> ...
  &lt;/entry&gt;
  &lt;entry&gt;
    <b>&lt;batch:id&gt;Query itemB&lt;/batch:id&gt;
    &lt;batch:operation type='query' /&gt;</b>
    &lt;id&gt;http://www.google.com/calendar/feeds/default/events/glcs0kv2qqa0gf52qi1jo018gc&lt;/id&gt;
  &lt;/entry&gt;
  &lt;entry gd:etag='"FkkOQgZGeip7ImA6WhVR"'&gt;
    <b>&lt;batch:id&gt;Update itemC&lt;/batch:id&gt;
    &lt;batch:operation type='update' /&gt;</b>
    &lt;id&gt;http://www.google.com/calendar/feeds/default/events/ujm0go5dtngdkr6u91dcqvj0qs&lt;/id&gt;
    &lt;category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/g/2005#event' /&gt;
    &lt;title type='text'&gt;Event updated via batch&lt;/title&gt;
    &lt;link rel='alternate' type='text/html'
        href='https://www.google.com/calendar/event?eid=dWptMGdvNWR0bmdka3I2dTkxZGNxdmowcXMgaGFyaXNodi50ZXN0QG0' title='alternate' /&gt;
    &lt;link rel='self' type='application/atom+xml'
        href='https://www.google.com/calendar/feeds/default/private/full/ujm0go5dtngdkr6u91dcqvj0qs' /&gt;
    &lt;link rel='edit' type='application/atom+xml'
        href='https://www.google.com/calendar/feeds/default/private/full/ujm0go5dtngdkr6u91dcqvj0qs/63326098791' /&gt;
   ... <i>rest of modified full resource representation</i> ...
  &lt;/entry&gt;
  &lt;entry gd:etag='"GUoNTgZCfCp7ImA6WhVW"'&gt;
    <b>&lt;batch:id&gt;Delete itemD&lt;/batch:id&gt;
    &lt;batch:operation type='delete' /&gt;</b>
    &lt;id&gt;http://www.google.com/calendar/feeds/default/events/d8qbg9egk1n6lhsgq1sjbqffqc&lt;/id&gt;
  &lt;/entry&gt;
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
Batch requests aren't available in JSON-C format.
</pre>
</section>
</div>

<p>Once you build your batch request feed, you need to send an authenticated <code>POST</code> request to the batch URL of the events feed. The batch URL is highlighted in the following events feed:</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;feed xmlns='http://www.w3.org/2005/Atom' xmlns:gd='http://schemas.google.com/g/2005'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/&lt;calendarID&gt;/private/full&lt;/id&gt;
  &lt;updated&gt;2007-09-21T22:59:51.000Z&lt;/updated&gt;
  &lt;title type='text'&gt;Jo March&lt;/title&gt;
  &lt;subtitle type='text'&gt;This is my main calendar.&lt;/subtitle&gt;
  ...
  <b>&lt;link rel='http://schemas.google.com/g/2005#batch' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/&lt;calendarID&gt;/private/full/batch' /&gt;</b>
  ...
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
Batch requests aren't available in JSON-C format.
</pre>
</section>
</div>

<p>After submitting the batch request, the server will respond with a feed that contains the status of each operation. You can parse this response to see if each operation was successful or not. Here's an abbreviated version of the response when submitting the above batch request feed.</p>

<div class="code-sample">
  <section>
    <h3>Atom</h3>
<pre class="prettyprint lang-xml">
&lt;feed xmlns='http://www.w3.org/2005/Atom'
      xmlns:batch='http://schemas.google.com/gdata/batch'
      xmlns:gCal='http://schemas.google.com/gCal/2005'&gt;
  &lt;id&gt;http://www.google.com/calendar/feeds/default/events&lt;/id&gt;
  &lt;updated&gt;2007-09-21T23:01:00.380Z&lt;/updated&gt;
  &lt;category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/g/2005#event'&gt;&lt;/category&gt;
  &lt;title type='text'&gt;Batch Feed&lt;/title&gt;
  &lt;link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/default/private/full' /&gt;
  &lt;link rel='http://schemas.google.com/g/2005#post' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/default/private/full' /&gt;
  &lt;link rel='http://schemas.google.com/g/2005#batch' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/default/private/full/batch' /&gt;
  &lt;entry&gt;
    <b>&lt;batch:id&gt;Insert itemA&lt;/batch:id&gt;
    &lt;batch:status code='201' reason='Created' /&gt;
    &lt;batch:operation type='insert' /&gt;</b>
    &lt;id&gt;http://www.google.com/calendar/feeds/default/events/n9ug78gd9tv53ppn4hdjvk68ek&lt;/id&gt;
    &lt;category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/g/2005#event' /&gt;
    &lt;title type='text'&gt;Event inserted via batch&lt;/title&gt;
    &lt;link rel='alternate' type='text/html'
        href='https://www.google.com/calendar/event?eid=bjl1Zzc4Z2Q5dHY1M3BwbjRoZGp2azY4ZWsgaGFyaXNodi50ZXN0QG0' title='alternate' /&gt;
    &lt;link rel='self' type='application/atom+xml'
        href='https://www.google.com/calendar/feeds/default/private/full/n9ug78gd9tv53ppn4hdjvk68ek' /&gt;
    &lt;link rel='edit' type='application/atom+xml'
      href='https://www.google.com/calendar/feeds/default/private/full/n9ug78gd9tv53ppn4hdjvk68ek/63326098860' /&gt;
    ... rest of <i>full resource representation</i> ...
  &lt;/entry&gt;
  &lt;entry&gt;
    <b>&lt;batch:id&gt;Query itemB&lt;/batch:id&gt;
    &lt;batch:status code='200' reason='Success' /&gt;
    &lt;batch:operation type='query' /&gt;</b>
    &lt;id&gt;http://www.google.com/calendar/feeds/default/events/glsc0kv2aqa0ff52qi1jo018gc&lt;/id&gt;
    &lt;category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/g/2005#event' /&gt;
    &lt;title type='text'&gt;Existing event&lt;/title&gt;
    &lt;link rel='alternate' type='text/html'
        href='https://www.google.com/calendar/event?eid=Z2xzYzBrdjJhcWEwZmY1MnFpMWpvMDE4Z2MgaGFyaXNodi50ZXN0QG0' title='alternate' /&gt;
    &lt;link rel='self' type='application/atom+xml'
        href='https://www.google.com/calendar/feeds/default/private/full/glsc0kv2aqa0ff52qi1jo018gc' /&gt;
    &lt;link rel='edit' type='application/atom+xml'
        href='https://www.google.com/calendar/feeds/default/private/full/glsc0kv2aqa0ff52qi1jo018gc/63326098791' /&gt;
    ... <i>rest of full resource representation</i> ...
  &lt;/entry&gt;
  &lt;entry xmlns:gCal='http://schemas.google.com/gCal/2005'&gt;
    <b>&lt;batch:id&gt;Update itemC&lt;/batch:id&gt;
    &lt;batch:status code='200' reason='Success' /&gt;
    &lt;batch:operation type='update' /&gt;</b>
    &lt;id&gt;http://www.google.com/calendar/feeds/default/events/ujm0go5dtngdkr6u91dcqvj0qs&lt;/id&gt;
    &lt;category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/g/2005#event' /&gt;
    &lt;title type='text'&gt;Event updated via batch&lt;/title&gt;
    &lt;link rel='alternate' type='text/html'
        href='https://www.google.com/calendar/event?eid=dWptMGdvNWR0bmdka3I2dTkxZGNxdmowcXMgaGFyaXNodi50ZXN0QG0' title='alternate' /&gt;
    &lt;link rel='self' type='application/atom+xml'
        href='https://www.google.com/calendar/feeds/default/private/full/ujm0go5dtngdkr6u91dcqvj0qs' /&gt;
    &lt;link rel='edit' type='application/atom+xml'
        href='https://www.google.com/calendar/feeds/default/private/full/ujm0go5dtngdkr6u91dcqvj0qs/63326098860' /&gt;
    ... rest of <i>full resource representation</i> ...
  &lt;/entry&gt;
  &lt;entry&gt;
    <b>&lt;batch:id&gt;Delete itemD&lt;/batch:id&gt;
    &lt;batch:status code='200' reason='Success' /&gt;
    &lt;batch:operation type='delete' /&gt;</b>
    &lt;id&gt;http://www.google.com/calendar/feeds/default/events/d8qbg9egk1n6lhsgq1sjbqffqc&lt;/id&gt;
    &lt;updated&gt;2010-03-25T00:28:03.819Z&lt;/updated&gt;
    &lt;title&gt;Deleted&lt;/title&gt;
    &lt;content&gt;Deleted&lt;/content&gt;
  &lt;/entry&gt;
&lt;/feed&gt;
</pre>
</section>
<section>
  <h3>JSON-C</h3>
<pre>
Batch requests aren't available in JSON-C format.
</pre>
</section>
</div>

<p>When working with batch requests, the size of the request must be under a megabyte and it's best to limit batches to 50-100 operations at a time. You can find more information about batch operations in the <a href="/gdata/docs/batch">Google Data Protocol batch processing</a> documentation.</p>

<p class="note"><strong>Note</strong>: The batch request URL for the freebusy feed is <code>https://www.google.com/calendar/feeds/default/freebusy/busy-times/batch</code></p>

<h3 id="JSON-C">Using the JSON-C data format</h3>
<p>JSON-C, sometimes called "Compact JSON," is a compact alternative to the Atom  XML data format that the Calendar Data API uses by default.</p>
<p>JSON-C uses standard <a href="http://www.json.org/">JSON</a> to encode the same information without having to exactly correspond to the equivalent Atom representation. In addition to being a significantly more compact format, JSON-C is  also faster to parse than XML.</p>
<p>To request that Google Calendar return data in JSON-C format, append the <code>alt=jsonc</code> query parameter to a query.</p>
<p>This developer's guide provides both Atom and JSON-C versions of most examples.</p>
<p class="note"><strong>Note</strong>: The client libraries don't support JSON-C; if you want your client to use JSON-C, you have to send the HTTP requests and parse the responses.</p>
<p> In most cases, JSON-C properties have names similar or identical to the corresponding Atom elements and attributes. Where the JSON-C names and corresponding Atom names differ, it is in the interest of making the JSON-C representation more compact.</p>
<p>Some specific differences worth noting:</p>
<ul>
  <li>The main property of a JSON-C feed is a <code>data</code> object.</li>
  <li>The JSON-C equivalent of a list of <code>&lt;entry&gt;</code> elements is a list of <code>item</code> objects.</li>
  <li>In JSON-C, a location is specified with a <code>location</code> property, which corresponds to the Atom <code>&lt;gd:where&gt;</code> element.</li>
  <li>The JSON-C <code>geoLocation</code> property corresponds to the Atom <code>&lt;gml:pos&gt;</code> element (contained in the <code>&lt;gml:Point&gt;</code> part of a <code>&lt;georss:where&gt;</code> element).</li>
  <li>The JSON-C <code>attendees</code> property corresponds to the Atom <code>&lt;gd:who&gt;</code> element.</li>
</ul>
<p>(The Google Data Protocol can also use a different <a href="/gdata/docs/json">JSON format</a>, but that format was designed to map precisely to the much less compact Atom representation.)</p>

  </div>

  
        </div>
        
<div id="gc-content-footer">



<div itemprop="datePublished" content="2012-12-20T13:07:20.687320" id="gc-content-last-updated">Last updated December 20, 2012.</div>

</div>




      </div>
  

        
      </div>
        
      

      
      
      <footer id="gc-footer">
        <div id="gc-copyright">
          <a href="/">
            <img id="developers-logo-footer" src="/_static/images/developers-logo-footer.png" alt="Google Developers logo" style="vertical-align: center; float: left"/>
          </a>
          <ul>
            <li><a href="http://www.google.com/">Google</a></li>
            <li><a href="/readme/terms">Terms of Service</a></li>
            <li><a href="http://www.google.com/intl/en/privacy/">Privacy Policy</a></li>
            <li><a href="/jobs">Jobs</a></li>
            <li><a class="google-feedback" data-p="81425" data-b="Documentation"  data-v="devsite-20130430-rc10.default" href="">Report a bug</a></li>
          </ul>
        </div>
        
        <div id="gc-language">
          <ul>
            <li>
              <form id="setlang" action="/i18n/setlang/" method="post">
                <div style='display:none'><input type='hidden' name='csrfmiddlewaretoken' value='46a277638ae61c9df837b5648d00049c' /></div>
                <select id="footer_language" name="language">
                  
                  
                  <option
                     value="ar"
                     >
                    العربيّة
                  </option>
                  
                  <option
                     value="bg"
                     >
                    български
                  </option>
                  
                  <option
                     value="ca"
                     >
                    català
                  </option>
                  
                  <option
                     value="zh-cn"
                     >
                    简体中文
                  </option>
                  
                  <option
                     value="zh-tw"
                     >
                    繁體中文
                  </option>
                  
                  <option
                     value="hr"
                     >
                    Hrvatski
                  </option>
                  
                  <option
                     value="cs"
                     >
                    česky
                  </option>
                  
                  <option
                     value="da"
                     >
                    Dansk
                  </option>
                  
                  <option
                     value="nl"
                     >
                    Nederlands
                  </option>
                  
                  <option
                     value="en"
                      selected="selected" >
                    English
                  </option>
                  
                  <option
                     value="fa"
                     >
                    فارسی
                  </option>
                  
                  <option
                     value="fi"
                     >
                    suomi
                  </option>
                  
                  <option
                     value="fr"
                     >
                    Français
                  </option>
                  
                  <option
                     value="de"
                     >
                    Deutsch
                  </option>
                  
                  <option
                     value="el"
                     >
                    Ελληνικά
                  </option>
                  
                  <option
                     value="he"
                     >
                    עברית
                  </option>
                  
                  <option
                     value="hi"
                     >
                    Hindi
                  </option>
                  
                  <option
                     value="hu"
                     >
                    Magyar
                  </option>
                  
                  <option
                     value="id"
                     >
                    Bahasa Indonesia
                  </option>
                  
                  <option
                     value="it"
                     >
                    italiano
                  </option>
                  
                  <option
                     value="ja"
                     >
                    日本語
                  </option>
                  
                  <option
                     value="ko"
                     >
                    한국어
                  </option>
                  
                  <option
                     value="lv"
                     >
                    latviešu
                  </option>
                  
                  <option
                     value="lt"
                     >
                    Lithuanian
                  </option>
                  
                  <option
                     value="nb"
                     >
                    Norsk (bokmål)
                  </option>
                  
                  <option
                     value="nn"
                     >
                    Norsk (nynorsk)
                  </option>
                  
                  <option
                     value="pl"
                     >
                    polski
                  </option>
                  
                  <option
                     value="pt-br"
                     >
                    Português Brasileiro
                  </option>
                  
                  <option
                     value="pt"
                     >
                    Português
                  </option>
                  
                  <option
                     value="ro"
                     >
                    Română
                  </option>
                  
                  <option
                     value="ru"
                     >
                    Русский
                  </option>
                  
                  <option
                     value="sr"
                     >
                    српски
                  </option>
                  
                  <option
                     value="sk"
                     >
                    slovenský
                  </option>
                  
                  <option
                     value="sl"
                     >
                    Slovenščina
                  </option>
                  
                  <option
                     value="es"
                     >
                    español
                  </option>
                  
                  <option
                     value="sv"
                     >
                    Svenska
                  </option>
                  
                  <option
                     value="th"
                     >
                    Thai
                  </option>
                  
                  <option
                     value="tr"
                     >
                    Türkçe
                  </option>
                  
                  <option
                     value="uk"
                     >
                    Українська
                  </option>
                  
                  <option
                     value="vi"
                     >
                    Vietnamese
                  </option>
                  
                </select>
              </form>
            </li>
          </ul>
        </div>
        
      </footer>
      
      
    </div>
    <div id="needAuth" class="msgDialogContent">
      
      <h1>Authentication required</h1>
      
      <div>
        You need to be signed in with <a href='http://www.google.com/+'>Google+</a> to do that.
      </div>
      <button>Sign in</button>
      <button>Cancel</button>
    </div>
    <div id="signingIn" class="msgDialogContent">
      
      <h1>Signing you in...</h1>
      <div>
        
        Google Developers needs your permission to do that.
      </div>
      
      <button>Try again</button>
      
      <button>Cancel</button>
    </div>
    <script src="/_static/js/script_foot.js"></script>
    <script>
      (function($) {
        devsite.devsite.Init($, null, '');
      })(jQuery);

      
      devsite.localInit = function() {
        
      };
      
    </script>
    <!-- Google Code for PXL - Developers - Codesite - HP - 90d Remarketing List -->
    <script type="text/javascript">
    $('#setlang select').each(function() {
      if ($.browser.msie) {
        $(this).change(function() {
          $('#setlang').submit();
        });
      } else {
        $(this).kdSelect({'change': function() {
          $('#setlang').submit();
        }});
      }
    });
    </script>
    <script type="text/javascript">
      /* <![CDATA[ */
      var google_conversion_id = 992540712;
      var google_conversion_language = "en";
      var google_conversion_format = "3";
      var google_conversion_color = "ffffff";
      var google_conversion_label = "qio2CKCPwQMQqPCj2QM";
      var google_conversion_value = 0;
      /* ]]> */
    </script>
    <script type="text/javascript" src="//www.googleadservices.com/pagead/conversion.js">
    </script>

    

    <script>
      
      google.load('visualization', '1', {packages: ['table']});
    </script>

    <noscript>
      <div style="display:inline;">
        <img height="1" width="1" style="border-style:none;" alt="" src="//www.googleadservices.com/pagead/conversion/992540712/?label=qio2CKCPwQMQqPCj2QM&amp;guid=ON&amp;script=0"/>
      </div>
    </noscript>
    





<script type="text/javascript">
$(document).ready(function(e) {
    // Render any carousels on the page
    $('.carousel').carousel();
    // Render any feed widgets on the page
    
    $('.feed').rss();
    $('.feed-plain').rss();
    // Render any OSS widgets on the page.
    $('.oss').oss();
    });
</script>

<script type="text/javascript" defer>


$(document).ready(function() {
    contentTimer.name = 'content';
    contentTimer.tick('ol');
    window.jstiming.report(contentTimer);

    // Boilerplate javascript to enable the plusone button
    var po = document.createElement('script'); po.type = 'text/javascript';
    po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js?onload=devsite_plusoneLoaded';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(po, s);
});
</script>





  </body>

  
</html>
